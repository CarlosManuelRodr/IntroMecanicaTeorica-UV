(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    197177,       3749]
NotebookOptionsPosition[    193899,       3687]
NotebookOutlinePosition[    194333,       3704]
CellTagsIndexPosition[    194290,       3701]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Ref: https://www.youtube.com/watch?time_continue=26&v=U-L23G8lPQ8&feature=emb_\
logo\
\>", "Text",
 CellChangeTimes->{{3.8122131696582355`*^9, 
  3.8122131711241612`*^9}},ExpressionUUID->"c8b11ec0-972b-4a99-9943-\
3066d129b5f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"M", "+", "m"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{
       RowBox[{"x1", "'"}], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"m", " ", 
     SuperscriptBox["h", "2"], " ", 
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", "m", " ", "h", " ", 
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}], " ", 
     RowBox[{
      RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "m", " ", "g", " ", "h", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"k", " ", 
     SuperscriptBox[
      RowBox[{"\[Theta]1", "[", "t", "]"}], "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812210474900623*^9, 3.812210564135106*^9}, {
  3.812212337802369*^9, 3.8122123458822403`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8cebdf0f-b9f3-4138-b2d7-a7bc801d9729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Qx1", " ", "=", " ", 
   RowBox[{"A", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812210583918231*^9, 3.812210606456752*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"eae2c97c-4284-472d-a7ed-a662e7e0b0db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EulerLagrange", "[", 
    RowBox[{"L_", ",", "q_", ",", "Q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lhs", ",", "rhs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{"q", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"rhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{"q", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lhs", "-", "rhs"}], "\[Equal]", "Q"}], ",", 
        RowBox[{
         RowBox[{"q", "''"}], "[", "t", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8122106120403976`*^9, 3.81221062500391*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"73194a42-8fbc-4912-989f-b0bc2707bb66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerLagrange", "[", 
  RowBox[{"L", ",", "x1", ",", "Qx1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8122106264788475`*^9, 3.812210639958705*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"d1fa3efb-4781-4252-92da-27611f159013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "42"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8122837205128245`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"7b206384-f39c-413e-81be-1c04748eb21b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerLagrange", "[", 
  RowBox[{"L", ",", "\[Theta]1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8122106489648366`*^9, 3.812210651979891*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"592eaa09-2422-48a9-82c5-64782e8ab625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.5`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"19.6`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"20.`", " ", 
        RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x1", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8122837219716034`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"47cf085a-87c5-4d32-ac79-34e524e95992"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.812210699861154*^9, 3.8122107481611757`*^9}, {
   3.8122113247710686`*^9, 3.812211327867546*^9}, {3.8122113809293003`*^9, 
   3.8122113815085926`*^9}, 3.8122115073741055`*^9, {3.8122117009998407`*^9, 
   3.8122117188730965`*^9}, {3.8122119512383127`*^9, 
   3.8122119806093693`*^9}, {3.8122123886340303`*^9, 3.812212394153164*^9}, {
   3.81221253426515*^9, 3.812212552031886*^9}, {3.8122126193823442`*^9, 
   3.8122126209434595`*^9}, {3.8122224805718822`*^9, 3.812222502344788*^9}, 
   3.8122225499688826`*^9, {3.812222595836647*^9, 3.81222259606927*^9}, {
   3.812282855689602*^9, 3.8122828609589753`*^9}, {3.8122841238494706`*^9, 
   3.8122841256828585`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"a3dfbcbe-01b8-4240-9ca7-fa150794ed7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "h", " ", "m", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", "h", " ", "m", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"m", "+", "M"}], ")"}]}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{"g", " ", "h", " ", "m", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{"k", " ", 
           RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
          RowBox[{"h", " ", "m", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["x1", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], 
         RowBox[{
          SuperscriptBox["h", "2"], " ", "m"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x1", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]1", "[", "t", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812210792214794*^9, 3.812210859241145*^9}, 
   3.8122117322306004`*^9, 3.8122123851534395`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"8f8ca6f9-1f7c-45d6-96ab-b3c3b9dc9377"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"solutions", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8122225242264576`*^9, 3.8122225249743958`*^9}, {
  3.8122226031635714`*^9, 3.8122226290774612`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"84d2b612-10fb-45d6-b4de-46f03af62851"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8BKW9WWd6e0NBSh+HLlYXLqCLTylW3j6SAG85P8ePca/hekxt0iwJSlAIaPy
Q82b21j8g4Qr8a8VgOIaTZNyxQ42TG35jPGjAvAaRqX4kwm4UhjPzwdfFaAm
suZkcAoBv701QENXrAD/cjeiO+WI+G/v9xD5QwF+ujIs5eQTcdF5F1/KRgVg
07lE0FTa479rsllhvxVAqmHjxbdXJLxqZHFst0cBzhQ9Eri9S8IPXc7nuzWq
AObTm0lax8i4U1fguY1/CmByUbf1410ynn9a96HP6l79rfbnhz+RcZpmyuql
XQUI9+YwNCzb48sjdTseNIowM/zIIRgn4+kVMSqzjIogFbJT9eQjGV/XtnBz
5VCEh1XLt8bCyPjR/EPvJwQUIdPmaxO7MRlPUvjb4yCpCG+z5F4KrJPwycxU
1mEFRfDpe+qomUTCNcSuml3RVITQ+pHODqk9vn8lcadXXxEeiWp/evaFiHdz
/Su+cEwRlo3+iWmLEfFARh/ps5cUgfF+F/PYwi7WEK1p/+uqIkwbMoqc+LKD
8VASks3dFMG6TfZm65VtrHQ9ks40WBFC9Cx9m3I3MMJQ0iR6pQhant+V8q4s
Y+aXbARLPiiC7e71jD72JexVu5CVRo4iuFx/0PCkfQHTa8isVapQBJJzlNn4
3nsqPLc0XWJEESo49/E+4R3H2mTD+9/PKMKAqHjwad5RTDjDmF14RRFoTinw
U8sNYz9SWiJ4qZWgUpaFIeZOP0YVOejALKEEq7xYh+KXX1i0FZXItqsSnJb6
7ufpn4105OhXJryUoKE2RnsroxjNUzJV/wlUgqMbBHXYrUDns3mcs+4rAWNF
qw9DcjOiixDSeJGgBC36DHRfGlpR6UUJuuhkJaBmnC0+1fsbidAof7LLVAJm
7UeHFQ3+oo4ejSDzb0pAf/NeO+WLPnT/K5zQLlaCVhv/sPXIAbRgfWyerUEJ
JPyG+lukRhCea6dcN6UEFcVyfm5aM8jrnjPV90UlONvd2D3sOovErtxof7Op
BDmJtw57ts+hGPoAv1t0yvBYvtXSVWERXbCLK5GTUgb9rtxX9WpriEH9aQyP
ojLkfxj7k3R7HZUzpNjQaiqDijSf/4mfG0i88ANx+Kgy2MpV5xOvbqO/D7+0
tpxSBun3O/cOp+2gh1dz35RYKUMI1YmKt/27aIWxzPCJizIsLi3l/mQjQsZo
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
Z7CZHJMnXW+aX2ZTENftIrI2jE3Xyv7y6H0uBayPanz6w2w65YLVFXYBBRkD
29gpHD7aryLO7Jcixu8O6UdkmHw5LvJaYcdjCrYW79DsZvJF+5gEy7yUAvMd
xV2CTL5IZFl0uJdRoLEudka/k4+e4cVkhT6loKKxrES7i49u29Pll8ZleKT8
NHaqlo/Ov7POooqmwEpY6e+0dD761rsj2/srKPCOK5BqusTkm0r00rkqxu8K
EUkS2ny0oW/763U1zD7sDf7vzBc2LdsoVqD2kgJbo6xl/TFsmn/D4ZsH6yno
5iZdT+Sw6X6nyGMujRR8Ff5nlF3NormPWzmBTRTwUv2iHQ6waE9Tk7fcfyn4
oXVUpzZyAc0Tw0t62inoCBDwjvCdR9WxprDpTgpevXohdNFuDj8HHdDa1kuB
QYW4idmWWbR9vi8yfpAC1z8Mo5RyplBXOMT5yRAFAQfNDd/f+4aS1nW67SNM
fxJclfKIr9jx3XBU4DMF/O3S0B79BQsNblbIjzP88ey+q5E6geFRNTH6Xygg
PvFFvCvjuE/Z4E/vKQrkM5WXdkuMIqu9nX1hhuGfYrJXB5Mfj73suS48CkIS
C0TiNT7g5sobGpbzFGhFiN8KjR7CLkexb6aLDF/cFN2XMv+tWwIP84zYBEih
oNg4ZxBnzSsVtJYSEP908rS08ADmzZoOqfxEIJLP1dFS9C06JAwkK6wgMFc9
R01K92PrCFtyvSCBbwu89LH6XrwZ9neXiDABv3Kd8Fuc16ijuunOclECp6zO
FJ4r7MaMyyD0XYzAHsk5Fj3egcelm+vG1xLYHRPQty6zHde+sAkcFidQFd6m
E+nZhn5CvqxOSQK6Ti2fOAatqFko9OyVFIFEH8HtUfotOEbd96qWJmD21UQl
yIThb9KzyWIZAkt/+114q3wjihgY52bLEvAYmXt0Orweqz/2uqTIEzg6IPJ+
QbgOvW+flo9XJKBgULI3LqUWVTlzg1G/ETi4LDNB8FANjnSFJIVuI3DdTM9K
Taga71/ZcOyGMgG7/cPzs/9V4Yoarc7zHAKP89OsLhdVINelLtJFnUCCw7LA
4yXP8YLI0UMnNQkc8F6pqvuSRsXiDwKWWgQ2JEvMJrci9lt4vTTdSeDEjqqo
Z0pcjF5YHmCkQyD7oKGNR/JT3P8gRk8PCPy6dqAybHs5lo6WlKvoE7hwVlPF
+FYpuv29x1PBgMBhD40/hqxLUEa9k7PJkEBS5p+i3F2PsafH4Yu4EYHke/4v
FzWLMdx3OltkPwGJxGfwQa8IDWQCTi0/wPTn1m9fd6wQ52rXyLEOEbASML+9
JLQAC1xT3s2YELh7a7ZvRV0+Oq36PXHcjEDPVPETK/F8lCqpsho2J/DS6qLu
bY88bLM8vL6PIiD2fmONf20uBrMG2zssCKgE+7EOVeQgpJyPeGVJQFHis9CP
7myc3st/sNqaQHpsqcsm4WzMGov4mWtD4LlDfLbXiSy0jdxcW3yC8df1rYod
zZkorllwI/skgeXsFTky1pn4qnfXrhR7AiVK/5i5LcvEG9da5u85EnD72H+2
syEDtWRPlEU5E9g3o5eYkJeBE3UTHqEujJ4xJ3s2FWRg6pmrajdcGX9yfUrb
WjLQSkxk4vIZArYLPlVGIpm46klC1vmzjB5+ah9V3TKxxnq7s8t5pv6KNfNk
lDk/6VQe/xeBmtuN4zaJWXjMKUmw+SKBFZnt6gq+2Zjh2mPDd4lAY4B09pHg
HJw+t7qA402Abo04+7QyF/U89y9x9CFQvYPPKT86D8Ou+B+5e5VAaYoXp8ou
H7v8uGn1fsx7Nz8wMjUuQJmbM7PzNwgUxn5eKDIpRPcwZWPlQAI2zZef2p0v
wvII5wTbIAKTahg6W1iMy2KSv0SFEOCf1K1UWVOCpvGvd9eEEUi9ebruQ0wp
3k8Wi+bdJnBcfvec3K4y/PDIeGRrBAERdePc9SJP8WoBhoZHE1CLieprXkNj
Q8n3/ypiCISI+28o0XmO656pqEzFEjjjtDpm+9UKtK04dV0unsD3R5plL15X
Yk7Ng3aLBAJ3+vtaNpq9wNmGXrnQJAKLn82MWSPVaNC65hL3AYGu2GVDBvdq
8U1voNSWNIYf4dLHpVwaUH6AdjfPYPizOuj8yuBXeGGYVxGYRWDCu1s/2KkZ
6VHVNWU5BNLywzYfS2pBgUkXx9E8AhtbVqi3TLQimXn4RKqQQICi3EZ90oYP
5t78bFJM4FFCq4Zcdztq/XQor/gJM5+TR84epW4MEAjiGyknkKNUaZDO/xpb
RCsOS3AZXrUFj3N5vSi57kfqfprRx0s6cJtoHzpJcng+FYx/go54NqX0Y9Em
1335VQQso3bZWbS/RZZcavy7agJKnZqDLPF3+I+KuJ5hPQFl7Z2hD7vf44C6
SdSlRgL+8vx7py2GcdvO4KGsJgKyVz6vWjoxgtUGc8GibQScvSz4G46N4qr9
v7/Z3UHAvcFRokljDK1N3LZ7dDH+s4y7FLR6Ar9Z9v/b00tAYNDcZtOWSYQT
62UF+whAXJeYvNZXDHEw9dR9y/DyvHCO/dFvuPlsleTD98w8ez1s7Aqm0SQg
zd51jOlX0Tn3jzs/8F7I25KECUZPf73Hpg1zOBIusbJ1kkBw48dvXvPzyIk2
s1oyxezDxaLv939dxKtxoTnqM0w/bdN2tDSLbkh8wXLmETByr3vfl8qi16Uu
mMb9ILBELC3Fcwubts3USGmcJ1BePbPydRSbzslzn1lcJCDzoT7Qmcem/wf3
Yw3T
          "]]}, Annotation[#, "Charting`Private`Tag$4949#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{{}, {
        Rational[-1, 2] Pi, Rational[1, 2] Pi}}, {{}, {-1.5707963267948966`, 
        1.5707963267948966`}}], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{{}, {
        Rational[-1, 2] Pi, Rational[1, 2] Pi}}, {{}, {-1.5707963267948966`, 
        1.5707963267948966`}}], GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.812282784502469*^9, 3.8122828642529707`*^9, 
  3.8122841522160435`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"88504dc1-8b88-488c-bca7-1bd553b25562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"solutions", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8122108608998423`*^9, 3.812210913195866*^9}, {
   3.8122113916790323`*^9, 3.8122113940621357`*^9}, 3.8122117345131636`*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"8953865a-27df-41e6-96e0-1843dc526ade"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YQl7yptCfwYMv/5znCZ5V+vi3r4cyMDF6azNFYRXu505lhpM9I7p+/Uf4S2j
LdtPhTAwavCo1oEwP0Rs7dEwBhoTx+aoEPYRoIpFhzPgJMzSmPQj9ccf6tsX
ycDYr+78FsInF1Xf3R3FwFR94foiwtnpfxN3xjCgnFV5/jzhEh3jXY5xDKj5
8a8fJlxTHGrMOMiAetnsxCjCXRtLJK0PM1D3ZDAihvBIzfjQpqNkPpYKjJ4g
PEPXe7AmnoH6Sr9jeYQXvPJO1k1g4E322XVthFV35fqoJzIQ6HVSSvz//Y31
gZLEgPNEhN+2//e3X1lG8jQDGzrHmx7+v79ZTp/nJjPwSYQ9sJHo5XMi5fHf
swxUainGtBOOlGm/MHmegUtLPkUnEL0TsyT9Ry+Q+lo9Kt2JX5nL7bf0X2Tg
6YOPE67E39t34hV60hhghd3L+4/koca09tvzDAaU9D0FW0heuupn1ddmMVBy
e/71zSRfIyxkPLjMAO3HpcoPZL/MvIncd+cKA8Yn648Vk7wu8LpnW3iVgdAA
tTPXyH5R/Tapejmf5CdmdlAjmYctwnubk66T+nUeef9H5pefVJBz5CYDvglP
ZSUPkX4ow+FRtxg4MyT5594R4s+KHdq775D8ni9canWC+HM37Y9bGdkXJ8wu
KScRf8x7Xmy9x4AGt3PhzGlSL5cVY1XJwKb9a3QKUkh+oi271Z4yMNvx2VL/
y+T3LUuPd79k4JwebceaUrIv1R9d+dXBgGlY+d3yuyrwDeVXyXczEH6yPp51
n7yvfGTS+Q0D0Qt03nZXkbwGKklEv2NAP4jj2/aY3FdzZ1lmL9HHIUVmoobU
u2dge98HBt57xTTebyL9VEeEzxomedo5oLGzlfS/RPqsxghh/wXea9uJfpVm
DR5fGLDZ/b6a94b8Xjxj9acpBvlO03ypNUZ+v2Otg9hPBnIPMwI6vhM97zR5
6/1m4MI1VZNz0+R+p5n0vf8YmFA9HGMkpArLwq2iE3OZcDS3O1u2WBUqtove
zsgysWPQLEhsoypm0gumFeWZiHwYc/42VNH5zVzaVJGJeanrFjEsVZGYGmAd
q8rE9gfdnX72qvj9sbl4zjIm0j5U1mi7qqLj6LEjC4yZGJD/HhwSq4ri1yrZ
K02Y8HY0W+pzSBUn9O9W0E3Jecuj9zOOqWJz1+DX0xZMvL7smvorSRW3tDc7
ydCYWJSVsflOhioSav7qqzgzsbrj4IHGclUgYNBAcTsTCSP/jlZXqmJCvnkV
ZQcTShLCq29UqcIpIG31ol1McEyWznjUqEJPYaORiB8TClkTl9xaVdFXo75+
zl4mPr7sahZ9qYpzAfM3CAUwEfjVsvpqhyr+1vQYzwQzES4dqVf3ShXNAftN
xyOZmH3ravGFD6qIU9iBz1FMsp8u5EwOqWJtrbXZSAwTG9fvHd8yoop0BVmL
gYNM6Di/zan5ogpm7T+L3sNMlArtUPk+rgrhwKHNb48y4Xn9rrTkd1XsrS3d
0pXAhAD/uLH8D1VoBKZbtScycSBfoXXWT1V0KRy2bktiknnpuNLxi+hR60dt
Oc3EkRW8vadmiB6BHJvGZCYk+MurDf4SPRRMbOvPMSE/T1b1zj9V5NVq0GpS
mIj2fiohJ6gGp0Axu8epTOjvH125TUgNEooTdlWXmEjK82Ptn6WGJ7Wv7CvT
mRC5/elKwGw1hAU+dijPJP5MKtebz1GDrmIBvSybifH2Yz8+EX5fe5pRksNE
pfJfdT9hNSQHhjNv5TLRsDRzUS1ha0U31o08Jv4cjwz5TXimlsouuMZEQYrh
kNhcNdwKNODkFTIxUebz7S957qEox71yg4mmC98EOwhT6gR42UVMxPD1cZ5w
c+AwL6OYifTbP/ysCccpPudfKmGCnmp8Y4zUs7aubOuFUibKzebbniE8Epjh
eO4uEw4Xe0PXE05XPLLtTDkTbzV3LR4m/THr9jglVTDx+cyy8BzCwkFc5xMP
mKh7q2IRRLhccZNLfBW5L2SlHp/wnjrN7Ueqib6Fx6c5hNWCxF0PPmGiZOlp
zh7CHYqTrrE1TLw4ndeTRTi+7vWOqDom9js0Co0T3hT0xC2igQkp3FvNI/V8
UyzcGdZI8twu+uIl4dy6M+77mpkwNnzB2UX6cwyK2BX4nPSXL7dnNtGrus7G
c/dLJnR73LmOImoICVrl5d3BRNatpzuERdWwTIni7dHFRHzDvW8FhN/WCfrs
7GFiUMV82nKeGs4EffRxfc3EpOnZjy2EKVvCA1hvmVhwOKHbYr4asmXnh215
z8T6I0XtWYSXfboYtb6PiV2TPh+GCBdX6h7SHWDiN3/j2CIxNWxIqjyuPMjE
m/9wW4fwIzf701LDTBQ//XdfnbD1mncpc0aYCNKttJpL+Plc/4zpT8R/nSu6
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
aWI9JG9F/j/+/eODWSAwsOiVNv4HmafIXQ==
          "]]}, Annotation[#, "Charting`Private`Tag$5019#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8BKW9WWd6e0NBSh+HLlYXLqCLTylW3j6SAG85P8ePca/hekxt0iwJSlAIaPy
Q82b21j8g4Qr8a8VgOIaTZNyxQ42TG35jPGjAvAaRqX4kwm4UhjPzwdfFaAm
suZkcAoBv701QENXrAD/cjeiO+WI+G/v9xD5QwF+ujIs5eQTcdF5F1/KRgVg
07lE0FTa479rsllhvxVAqmHjxbdXJLxqZHFst0cBzhQ9Eri9S8IPXc7nuzWq
AObTm0lax8i4U1fguY1/CmByUbf1410ynn9a96HP6l79rfbnhz+RcZpmyuql
XQUI9+YwNCzb48sjdTseNIowM/zIIRgn4+kVMSqzjIogFbJT9eQjGV/XtnBz
5VCEh1XLt8bCyPjR/EPvJwQUIdPmaxO7MRlPUvjb4yCpCG+z5F4KrJPwycxU
1mEFRfDpe+qomUTCNcSuml3RVITQ+pHODqk9vn8lcadXXxEeiWp/evaFiHdz
/Su+cEwRlo3+iWmLEfFARh/ps5cUgfF+F/PYwi7WEK1p/+uqIkwbMoqc+LKD
8VASks3dFMG6TfZm65VtrHQ9ks40WBFC9Cx9m3I3MMJQ0iR6pQhant+V8q4s
Y+aXbARLPiiC7e71jD72JexVu5CVRo4iuFx/0PCkfQHTa8isVapQBJJzlNn4
3nsqPLc0XWJEESo49/E+4R3H2mTD+9/PKMKAqHjwad5RTDjDmF14RRFoTinw
U8sNYz9SWiJ4qZWgUpaFIeZOP0YVOejALKEEq7xYh+KXX1i0FZXItqsSnJb6
7ufpn4105OhXJryUoKE2RnsroxjNUzJV/wlUgqMbBHXYrUDns3mcs+4rAWNF
qw9DcjOiixDSeJGgBC36DHRfGlpR6UUJuuhkJaBmnC0+1fsbidAof7LLVAJm
7UeHFQ3+oo4ejSDzb0pAf/NeO+WLPnT/K5zQLlaCVhv/sPXIAbRgfWyerUEJ
JPyG+lukRhCea6dcN6UEFcVyfm5aM8jrnjPV90UlONvd2D3sOovErtxof7Op
BDmJtw57ts+hGPoAv1t0yvBYvtXSVWERXbCLK5GTUgb9rtxX9WpriEH9aQyP
ojLkfxj7k3R7HZUzpNjQaiqDijSf/4mfG0i88ANx+Kgy2MpV5xOvbqO/D7+0
tpxSBun3O/cOp+2gh1dz35RYKUMI1YmKt/27aIWxzPCJizIsLi3l/mQjQsZo
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
Z7CZHJMnXW+aX2ZTENftIrI2jE3Xyv7y6H0uBayPanz6w2w65YLVFXYBBRkD
29gpHD7aryLO7Jcixu8O6UdkmHw5LvJaYcdjCrYW79DsZvJF+5gEy7yUAvMd
xV2CTL5IZFl0uJdRoLEudka/k4+e4cVkhT6loKKxrES7i49u29Pll8ZleKT8
NHaqlo/Ov7POooqmwEpY6e+0dD761rsj2/srKPCOK5BqusTkm0r00rkqxu8K
EUkS2ny0oW/763U1zD7sDf7vzBc2LdsoVqD2kgJbo6xl/TFsmn/D4ZsH6yno
5iZdT+Sw6X6nyGMujRR8Ff5nlF3NormPWzmBTRTwUv2iHQ6waE9Tk7fcfyn4
oXVUpzZyAc0Tw0t62inoCBDwjvCdR9WxprDpTgpevXohdNFuDj8HHdDa1kuB
QYW4idmWWbR9vi8yfpAC1z8Mo5RyplBXOMT5yRAFAQfNDd/f+4aS1nW67SNM
fxJclfKIr9jx3XBU4DMF/O3S0B79BQsNblbIjzP88ey+q5E6geFRNTH6Xygg
PvFFvCvjuE/Z4E/vKQrkM5WXdkuMIqu9nX1hhuGfYrJXB5Mfj73suS48CkIS
C0TiNT7g5sobGpbzFGhFiN8KjR7CLkexb6aLDF/cFN2XMv+tWwIP84zYBEih
oNg4ZxBnzSsVtJYSEP908rS08ADmzZoOqfxEIJLP1dFS9C06JAwkK6wgMFc9
R01K92PrCFtyvSCBbwu89LH6XrwZ9neXiDABv3Kd8Fuc16ijuunOclECp6zO
FJ4r7MaMyyD0XYzAHsk5Fj3egcelm+vG1xLYHRPQty6zHde+sAkcFidQFd6m
E+nZhn5CvqxOSQK6Ti2fOAatqFko9OyVFIFEH8HtUfotOEbd96qWJmD21UQl
yIThb9KzyWIZAkt/+114q3wjihgY52bLEvAYmXt0Orweqz/2uqTIEzg6IPJ+
QbgOvW+flo9XJKBgULI3LqUWVTlzg1G/ETi4LDNB8FANjnSFJIVuI3DdTM9K
Taga71/ZcOyGMgG7/cPzs/9V4Yoarc7zHAKP89OsLhdVINelLtJFnUCCw7LA
4yXP8YLI0UMnNQkc8F6pqvuSRsXiDwKWWgQ2JEvMJrci9lt4vTTdSeDEjqqo
Z0pcjF5YHmCkQyD7oKGNR/JT3P8gRk8PCPy6dqAybHs5lo6WlKvoE7hwVlPF
+FYpuv29x1PBgMBhD40/hqxLUEa9k7PJkEBS5p+i3F2PsafH4Yu4EYHke/4v
FzWLMdx3OltkPwGJxGfwQa8IDWQCTi0/wPTn1m9fd6wQ52rXyLEOEbASML+9
JLQAC1xT3s2YELh7a7ZvRV0+Oq36PXHcjEDPVPETK/F8lCqpsho2J/DS6qLu
bY88bLM8vL6PIiD2fmONf20uBrMG2zssCKgE+7EOVeQgpJyPeGVJQFHis9CP
7myc3st/sNqaQHpsqcsm4WzMGov4mWtD4LlDfLbXiSy0jdxcW3yC8df1rYod
zZkorllwI/skgeXsFTky1pn4qnfXrhR7AiVK/5i5LcvEG9da5u85EnD72H+2
syEDtWRPlEU5E9g3o5eYkJeBE3UTHqEujJ4xJ3s2FWRg6pmrajdcGX9yfUrb
WjLQSkxk4vIZArYLPlVGIpm46klC1vmzjB5+ah9V3TKxxnq7s8t5pv6KNfNk
lDk/6VQe/xeBmtuN4zaJWXjMKUmw+SKBFZnt6gq+2Zjh2mPDd4lAY4B09pHg
HJw+t7qA402Abo04+7QyF/U89y9x9CFQvYPPKT86D8Ou+B+5e5VAaYoXp8ou
H7v8uGn1fsx7Nz8wMjUuQJmbM7PzNwgUxn5eKDIpRPcwZWPlQAI2zZef2p0v
wvII5wTbIAKTahg6W1iMy2KSv0SFEOCf1K1UWVOCpvGvd9eEEUi9ebruQ0wp
3k8Wi+bdJnBcfvec3K4y/PDIeGRrBAERdePc9SJP8WoBhoZHE1CLieprXkNj
Q8n3/ypiCISI+28o0XmO656pqEzFEjjjtDpm+9UKtK04dV0unsD3R5plL15X
Yk7Ng3aLBAJ3+vtaNpq9wNmGXrnQJAKLn82MWSPVaNC65hL3AYGu2GVDBvdq
8U1voNSWNIYf4dLHpVwaUH6AdjfPYPizOuj8yuBXeGGYVxGYRWDCu1s/2KkZ
6VHVNWU5BNLywzYfS2pBgUkXx9E8AhtbVqi3TLQimXn4RKqQQICi3EZ90oYP
5t78bFJM4FFCq4Zcdztq/XQor/gJM5+TR84epW4MEAjiGyknkKNUaZDO/xpb
RCsOS3AZXrUFj3N5vSi57kfqfprRx0s6cJtoHzpJcng+FYx/go54NqX0Y9Em
1335VQQso3bZWbS/RZZcavy7agJKnZqDLPF3+I+KuJ5hPQFl7Z2hD7vf44C6
SdSlRgL+8vx7py2GcdvO4KGsJgKyVz6vWjoxgtUGc8GibQScvSz4G46N4qr9
v7/Z3UHAvcFRokljDK1N3LZ7dDH+s4y7FLR6Ar9Z9v/b00tAYNDcZtOWSYQT
62UF+whAXJeYvNZXDHEw9dR9y/DyvHCO/dFvuPlsleTD98w8ez1s7Aqm0SQg
zd51jOlX0Tn3jzs/8F7I25KECUZPf73Hpg1zOBIusbJ1kkBw48dvXvPzyIk2
s1oyxezDxaLv939dxKtxoTnqM0w/bdN2tDSLbkh8wXLmETByr3vfl8qi16Uu
mMb9ILBELC3Fcwubts3USGmcJ1BePbPydRSbzslzn1lcJCDzoT7Qmcem/wf3
Yw3T
          "]]}, Annotation[#, "Charting`Private`Tag$5019#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.812282786614365*^9, 3.812282866090777*^9, 
  3.8122841541578417`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"3583a69d-653f-4a75-9418-9127a7e92774"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sistema de referencia inercial", "Subsection",
 CellChangeTimes->{{3.812212883394105*^9, 
  3.812212887300851*^9}},ExpressionUUID->"98e6174c-05cb-4dd4-830d-\
d8f7ad939dfa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", "+", "x1"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "-", 
      RowBox[{"h", " ", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ",", 
     RowBox[{"h", " ", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"r4", "[", 
     RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "+", "x1", "-", 
       RowBox[{"h", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ",", 
      RowBox[{"h", " ", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r1", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r2", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r3", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r4", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r4", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.812210937613529*^9, 3.812210980800623*^9}, {
  3.8122110983338237`*^9, 3.8122111903991437`*^9}, {3.8122127940373745`*^9, 
  3.8122128002057457`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"b0e50cd2-a60e-4641-813c-bba38b9c6f1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r2", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r3", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r3", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r2", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r1", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r2", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r3", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r4", "[", "t", "]"}], ",", "0.05"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8122112619510827`*^9, 3.8122113082870817`*^9}, {
   3.812211357973052*^9, 3.812211361574698*^9}, {3.812211641159565*^9, 
   3.8122116687258215`*^9}, 3.8122117507225704`*^9, {3.812212910339856*^9, 
   3.812212979351617*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"3b18c307-0fec-43fe-ba51-6b65e275b0f5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {288., {142., 146.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r2[$CellContext`t$$]}], Black, 
         Line[{
           $CellContext`r3[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r3[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r2[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Brown, 
         Disk[
          $CellContext`r1[$CellContext`t$$], 0.05], Brown, 
         Disk[
          $CellContext`r2[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r3[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r4[$CellContext`t$$], 0.05]}, 
        PlotRange -> {{-1, 3}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{853., {165., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8122827919050646`*^9, 3.8122828689960575`*^9, 
  3.812284158144617*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"8aa83acb-7050-4302-b370-dc916d5df3bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sistema de referencia dentro del edificio", "Subsection",
 CellChangeTimes->{{3.812212896619614*^9, 
  3.812212902349129*^9}},ExpressionUUID->"caf485ee-f71c-48e0-8357-\
acc72a5eff6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r1e", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2e", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3e", "[", 
    RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "h"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", 
     RowBox[{"h", " ", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"r4e", "[", 
     RowBox[{"x1_", ",", "\[Theta]1_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "-", 
       RowBox[{"h", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ",", 
      RowBox[{"h", " ", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r1e", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r1e", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2e", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r2e", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3e", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r3e", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r4e", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r4e", ",", 
     RowBox[{"solutions", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8122129980752335`*^9, 3.8122130192624416`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ece100a0-2629-4c76-8024-b142b6829d6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1e", "[", "t", "]"}], ",", 
          RowBox[{"r2e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r3e", "[", "t", "]"}], ",", 
          RowBox[{"r4e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1e", "[", "t", "]"}], ",", 
          RowBox[{"r3e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r2e", "[", "t", "]"}], ",", 
          RowBox[{"r4e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r1e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r2e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r3e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r4e", "[", "t", "]"}], ",", "0.05"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.812213031090086*^9, 3.8122130562847013`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"0c1e3581-c57b-4722-85c4-d7faddad39e9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {288., {142., 146.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{
           $CellContext`r1e[$CellContext`t$$], 
           $CellContext`r2e[$CellContext`t$$]}], Black, 
         Line[{
           $CellContext`r3e[$CellContext`t$$], 
           $CellContext`r4e[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r1e[$CellContext`t$$], 
           $CellContext`r3e[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r2e[$CellContext`t$$], 
           $CellContext`r4e[$CellContext`t$$]}], Brown, 
         Disk[
          $CellContext`r1e[$CellContext`t$$], 0.05], Brown, 
         Disk[
          $CellContext`r2e[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r3e[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r4e[$CellContext`t$$], 0.05]}, 
        PlotRange -> {{-1, 3}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{853., {165., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8122829039178905`*^9, 3.8122841628805923`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"9d3d1fe6-f8fb-4bec-b4ca-aa1c3303feae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para agregar el resorte al diagrama", "Subsubsection",
 CellChangeTimes->{{3.812213129566538*^9, 
  3.812213134876972*^9}},ExpressionUUID->"e6c83e9d-ddda-4ade-bcbb-\
2166b3fb28a6"],

Cell["Ojo: no es la soluci\[OAcute]n con resorte, s\[OAcute]lo un diagrama", \
"Text",
 CellChangeTimes->{{3.8122131450754013`*^9, 
  3.8122131532608285`*^9}},ExpressionUUID->"fb473e40-51a7-4012-8d3b-\
2184aea8f29b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DropSides", "[", "l_List", "]"}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"l", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendSides", "[", 
    RowBox[{"l_List", ",", "left_", ",", "right_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "left", "}"}], ",", "l", ",", 
     RowBox[{"{", "right", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OddEven", "[", "l_List", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"l", ",", "2", ",", "2", ",", "1", ",", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Source", ":", " ", "https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "21468"}], "/", "pretty"}], "-", "way", "-", "to",
      "-", "group", "-", "elements", "-", "at", "-", "odd", "-", "and", "-", 
     "even", "-", "positions"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Spring", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi_", ",", "yi_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xf_", ",", "yf_"}], "}"}], ",", "div_", ",", "width_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xPoints", ",", "slope", ",", "xyPoints", ",", "d", ",", "odd", ",", 
       "even", ",", "normalPointsOdd", ",", "normalPointsEven", ",", 
       "zigzagPts", ",", "springCoords"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xPoints", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"xi", ",", 
         RowBox[{"xf", "-", "xi"}], ",", 
         FractionBox[
          RowBox[{"xf", "-", "xi"}], "div"]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"slope", " ", "=", " ", 
       FractionBox[
        RowBox[{"yf", "-", "yi"}], 
        RowBox[{"xf", "-", "xi"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xyPoints", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"slope", 
             RowBox[{"(", 
              RowBox[{"x", "-", "xi"}], ")"}]}], "+", "yi"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"DropSides", "[", "xPoints", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"odd", ",", "even"}], "}"}], " ", "=", " ", 
       RowBox[{"OddEven", "[", "xyPoints", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d", " ", "=", " ", 
       RowBox[{"width", "*", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xf", "-", "xi"}], ",", 
           RowBox[{"yf", "-", "yi"}]}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normalPointsOdd", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             FractionBox["\[Pi]", "2"], "]"}], ".", "d"}], "+", "#"}], "&"}], 
         ",", "odd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normalPointsEven", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             RowBox[{"-", 
              FractionBox["\[Pi]", "2"]}], "]"}], ".", "d"}], "+", "#"}], 
          "&"}], ",", "even"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zigzagPts", " ", "=", " ", 
       RowBox[{"Riffle", "[", 
        RowBox[{"normalPointsOdd", ",", "normalPointsEven"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"springCoords", " ", "=", " ", 
       RowBox[{"AppendSides", "[", 
        RowBox[{"zigzagPts", ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "yi"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xf", ",", "yf"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", "springCoords", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",ExpressionUUID->"3cea6840-c049-4307-bca2-101964db4070"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1e", "[", "t", "]"}], ",", 
          RowBox[{"r2e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r3e", "[", "t", "]"}], ",", 
          RowBox[{"r4e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1e", "[", "t", "]"}], ",", 
          RowBox[{"r3e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r2e", "[", "t", "]"}], ",", 
          RowBox[{"r4e", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Red", ",", 
       RowBox[{"Spring", "[", 
        RowBox[{
         RowBox[{"r1e", "[", "t", "]"}], ",", 
         RowBox[{"r4e", "[", "t", "]"}], ",", "15", ",", "0.07"}], "]"}], ",",
        "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r1e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r2e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r3e", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r4e", "[", "t", "]"}], ",", "0.05"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8122132247263513`*^9, 3.812213274645549*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"33662aeb-aa81-491c-9e7a-109207d0a419"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 25.200000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {288., {142., 146.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{
           $CellContext`r1e[$CellContext`t$$], 
           $CellContext`r2e[$CellContext`t$$]}], Black, 
         Line[{
           $CellContext`r3e[$CellContext`t$$], 
           $CellContext`r4e[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r1e[$CellContext`t$$], 
           $CellContext`r3e[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r2e[$CellContext`t$$], 
           $CellContext`r4e[$CellContext`t$$]}], Red, 
         $CellContext`Spring[
          $CellContext`r1e[$CellContext`t$$], 
          $CellContext`r4e[$CellContext`t$$], 15, 0.07], Brown, 
         Disk[
          $CellContext`r1e[$CellContext`t$$], 0.05], Brown, 
         Disk[
          $CellContext`r2e[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r3e[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r4e[$CellContext`t$$], 0.05]}, 
        PlotRange -> {{-1, 3}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{846., {165., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8122837639750834`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"98ad07cf-930c-4d0a-9aae-c68107f72d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification:>0.8 Inherited,
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b72bc08c-323d-472d-8f3f-8f56bfce33d0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 238, 6, 28, "Text",ExpressionUUID->"c8b11ec0-972b-4a99-9943-3066d129b5f0"],
Cell[799, 28, 1113, 30, 22, "Input",ExpressionUUID->"8cebdf0f-b9f3-4138-b2d7-a7bc801d9729"],
Cell[1915, 60, 313, 7, 22, "Input",ExpressionUUID->"eae2c97c-4284-472d-a7ed-a662e7e0b0db"],
Cell[2231, 69, 1110, 30, 83, "Input",ExpressionUUID->"73194a42-8fbc-4912-989f-b0bc2707bb66"],
Cell[CellGroupData[{
Cell[3366, 103, 249, 4, 22, "Input",ExpressionUUID->"d1fa3efb-4781-4252-92da-27611f159013"],
Cell[3618, 109, 1015, 28, 40, "Output",ExpressionUUID->"7b206384-f39c-413e-81be-1c04748eb21b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4670, 142, 254, 4, 22, "Input",ExpressionUUID->"592eaa09-2422-48a9-82c5-64782e8ab625"],
Cell[4927, 148, 850, 23, 25, "Output",ExpressionUUID->"47cf085a-87c5-4d32-ac79-34e524e95992"]
}, Open  ]],
Cell[5792, 174, 1393, 27, 128, "Input",ExpressionUUID->"a3dfbcbe-01b8-4240-9ca7-fa150794ed7f"],
Cell[7188, 203, 2908, 72, 232, "Input",ExpressionUUID->"8f8ca6f9-1f7c-45d6-96ab-b3c3b9dc9377"],
Cell[CellGroupData[{
Cell[10121, 279, 921, 24, 35, "Input",ExpressionUUID->"84d2b612-10fb-45d6-b4de-46f03af62851"],
Cell[11045, 305, 55418, 953, 190, "Output",ExpressionUUID->"88504dc1-8b88-488c-bca7-1bd553b25562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66500, 1263, 627, 13, 22, "Input",ExpressionUUID->"8953865a-27df-41e6-96e0-1843dc526ade"],
Cell[67130, 1278, 101775, 1728, 190, "Output",ExpressionUUID->"3583a69d-653f-4a75-9418-9127a7e92774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168942, 3011, 178, 3, 43, "Subsection",ExpressionUUID->"98e6174c-05cb-4dd4-830d-d8f7ad939dfa"],
Cell[169123, 3016, 2336, 74, 148, "Input",ExpressionUUID->"b0e50cd2-a60e-4641-813c-bba38b9c6f1c"],
Cell[CellGroupData[{
Cell[171484, 3094, 2531, 64, 248, "Input",ExpressionUUID->"3b18c307-0fec-43fe-ba51-6b65e275b0f5"],
Cell[174018, 3160, 2408, 53, 350, "Output",ExpressionUUID->"8aa83acb-7050-4302-b370-dc916d5df3bd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176475, 3219, 189, 3, 43, "Subsection",ExpressionUUID->"caf485ee-f71c-48e0-8357-acc72a5eff6c"],
Cell[176667, 3224, 2197, 70, 148, "Input",ExpressionUUID->"ece100a0-2629-4c76-8024-b142b6829d6c"],
Cell[CellGroupData[{
Cell[178889, 3298, 2365, 61, 248, "Input",ExpressionUUID->"0c1e3581-c57b-4722-85c4-d7faddad39e9"],
Cell[181257, 3361, 2396, 52, 350, "Output",ExpressionUUID->"9d3d1fe6-f8fb-4bec-b4ca-aa1c3303feae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183690, 3418, 186, 3, 35, "Subsubsection",ExpressionUUID->"e6c83e9d-ddda-4ade-bcbb-2166b3fb28a6"],
Cell[183879, 3423, 216, 4, 28, "Text",ExpressionUUID->"fb473e40-51a7-4012-8d3b-2184aea8f29b"],
Cell[184098, 3429, 4621, 126, 373, "Input",ExpressionUUID->"3cea6840-c049-4307-bca2-101964db4070",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[188744, 3559, 2583, 66, 263, "Input",ExpressionUUID->"33662aeb-aa81-491c-9e7a-109207d0a419"],
Cell[191330, 3627, 2529, 55, 350, "Output",ExpressionUUID->"98ad07cf-930c-4d0a-9aae-c68107f72d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

