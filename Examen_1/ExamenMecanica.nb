(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83061,       1731]
NotebookOptionsPosition[     80592,       1682]
NotebookOutlinePosition[     81120,       1701]
CellTagsIndexPosition[     81077,       1698]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EulerLagrange", "[", 
    RowBox[{"L_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lhs", ",", "rhs", ",", "solution"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{"q", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"rhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{"q", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"solution", " ", "=", " ", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lhs", "-", "rhs"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"q", "''"}], "[", "t", "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}], "==", "solution"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8123276673171744`*^9, 3.812327737915389*^9}, {
   3.8123277787167883`*^9, 3.8123278081626687`*^9}, {3.81232786903051*^9, 
   3.812327984002821*^9}, 3.8123320846375923`*^9, {3.812486054507243*^9, 
   3.8124860585444045`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"4e2618da-5a3b-4097-b041-f21224da2dd9"],

Cell[CellGroupData[{

Cell["L1", "Title",
 CellChangeTimes->{{3.8123268975385466`*^9, 
  3.8123268982261305`*^9}},ExpressionUUID->"dcce7e29-b9c3-40e2-96ec-\
013ac707739e"],

Cell["\<\
Ref: https://www.youtube.com/watch?time_continue=26&v=U-L23G8lPQ8&feature=emb_\
logo\
\>", "Text",
 CellChangeTimes->{{3.8122131696582355`*^9, 
  3.8122131711241612`*^9}},ExpressionUUID->"c8b11ec0-972b-4a99-9943-\
3066d129b5f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["h", "2"], 
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"m", " ", 
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["\[Omega]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}], "2"]}], "-", 
    RowBox[{"2", " ", "m", " ", "A", " ", "\[Omega]", " ", "h", " ", 
     RowBox[{
      RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "m", " ", "g", " ", "h", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"k", " ", 
     SuperscriptBox[
      RowBox[{"\[Theta]1", "[", "t", "]"}], "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812210474900623*^9, 3.812210564135106*^9}, {
   3.812212337802369*^9, 3.8122123458822403`*^9}, {3.8123269412198277`*^9, 
   3.812326950671013*^9}, 3.8124749964412317`*^9, {3.8124750312403784`*^9, 
   3.8124751254954634`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"8cebdf0f-b9f3-4138-b2d7-a7bc801d9729"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EulerLagrange", "[", 
    RowBox[{"L_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lhs", ",", "rhs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", 
           RowBox[{
            RowBox[{"q", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"rhs", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{"q", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lhs", "-", "rhs"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"q", "''"}], "[", "t", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8122106120403976`*^9, 3.81221062500391*^9}, {
  3.812475007642065*^9, 3.8124750183022175`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"73194a42-8fbc-4912-989f-b0bc2707bb66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerLagrange", "[", 
  RowBox[{"L", ",", "\[Theta]1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8122106489648366`*^9, 3.812210651979891*^9}, {
  3.8124750283264675`*^9, 3.8124750284647813`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"592eaa09-2422-48a9-82c5-64782e8ab625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "A"}], " ", "h", " ", "m", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
      RowBox[{"g", " ", "h", " ", "m", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"k", " ", 
       RowBox[{"\[Theta]1", "[", "t", "]"}]}]}], 
     RowBox[{
      SuperscriptBox["h", "2"], " ", "m"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8122837219716034`*^9, 3.8123180129059315`*^9, 3.812475130056859*^9, 
   3.812486000584532*^9, 3.812486077790187*^9, 3.8127164198984003`*^9, {
   3.8127164880154147`*^9, 3.812716511330343*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"01ff6a4e-1d57-42cb-afc2-849d72763cc9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.812210699861154*^9, 3.8122107481611757`*^9}, {
   3.8122113247710686`*^9, 3.812211327867546*^9}, {3.8122113809293003`*^9, 
   3.8122113815085926`*^9}, 3.8122115073741055`*^9, {3.8122117009998407`*^9, 
   3.8122117188730965`*^9}, {3.8122119512383127`*^9, 
   3.8122119806093693`*^9}, {3.8122123886340303`*^9, 3.812212394153164*^9}, {
   3.81221253426515*^9, 3.812212552031886*^9}, {3.8122126193823442`*^9, 
   3.8122126209434595`*^9}, {3.8122224805718822`*^9, 3.812222502344788*^9}, 
   3.8122225499688826`*^9, {3.812222595836647*^9, 3.81222259606927*^9}, {
   3.812282855689602*^9, 3.8122828609589753`*^9}, {3.8122841238494706`*^9, 
   3.8122841256828585`*^9}, {3.8124749997459497`*^9, 
   3.8124749998994594`*^9}, {3.8124751357380886`*^9, 3.812475135918782*^9}, {
   3.8124754622116385`*^9, 3.812475462482169*^9}, {3.812475508374392*^9, 
   3.8124755089705987`*^9}, 3.8124755634459867`*^9, {3.8124756087510047`*^9, 
   3.8124756091134453`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a3dfbcbe-01b8-4240-9ca7-fa150794ed7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "eventTime", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solutions", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "h", " ", "m", " ", 
           SuperscriptBox["\[Omega]", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
          RowBox[{"g", " ", "h", " ", "m", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{"k", " ", 
           RowBox[{"\[Theta]1", "[", "t", "]"}]}]}], 
         RowBox[{
          SuperscriptBox["h", "2"], " ", "m"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "\[GreaterEqual]", 
          " ", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{
          RowBox[{"eventTime", "=", "t"}], ";", "\"\<StopIntegration\>\""}]}],
         "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "eventTime", "]"}], "===", "Symbol"}], ",", 
    RowBox[{"eventTime", " ", "=", " ", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"First", "[", "solutions", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.812210792214794*^9, 3.812210859241145*^9}, 
   3.8122117322306004`*^9, 3.8122123851534395`*^9, {3.812475151560319*^9, 
   3.812475160140831*^9}, {3.81247554253856*^9, 3.8124755529094143`*^9}, {
   3.812475595980529*^9, 3.812475602654354*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"8f8ca6f9-1f7c-45d6-96ab-b3c3b9dc9377"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"solutions", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "eventTime"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", "}"}]}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8122225242264576`*^9, 3.8122225249743958`*^9}, {
   3.8122226031635714`*^9, 3.8122226290774612`*^9}, {3.8124751720368786`*^9, 
   3.8124751780959053`*^9}, {3.8124754574353347`*^9, 3.812475457610181*^9}, 
   3.812475579476555*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"84d2b612-10fb-45d6-b4de-46f03af62851"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZqOfBQozyxL5eHRW+4rrZqNi4VMfFZKYUKyUswh/slAcNSnJ4Clfv50y6wRy
spBXUre3dQoTKpIX3mqdyELUiS1Er+dMaHLYuv7q4mukceCEUtQLJuy87b9C
S/k1EruZMPcqnQm/A78NUHdlInbbj8YPr5gQrL3a95vkK1SrIvt84DUT7piN
BqR0pqMUz2P+gjlM+FWVY/kh8CUKLn9Ilc3jx9eiH2b6Nw3Zinds189ngmNV
Vep+6nN04Li0AL2QCf/YcgVVgSlIOsOqxb2Ir2fGNgHJK0/Rrz+xGbeK+fVB
8cojB3oSajJuC04rZcL19SVbpGcfo4g+xu7ucv59n2Wtb9tHIyfNB8ILlUzY
8ayve9Wam8gksLlDqoYJrRadcQuzfkilfn2O9gcmCOyJsiwZB7RkMy3M8iMT
nr2WD/jsfQl3O0Qfd6rn77/2FRx1vIVL87/qhH5mwr3kZx7d6AH2oZB7Sr8x
4fip/arjnU8x/UlkQXszHy+n8Z1HH6RhrfHPt2db+foccZW4evsVHrtB3Kve
yY/H//SNns15uK71tjihiwkx/7UyF2bycZpy/eDZbib8kSTkik++xafem0U/
7ufzy/XQIkmhDKM1Nx3fDjJh7yblubjP77GMTR1qHmbCa5sLVbxbFbjlt8mo
6BgTHk39bLihV4PNNIyO+M3w+bJiyveN8Wcs0Nws6PmLv796gNCd0ojzfc+W
Ov1hQmHrS5EtmV+wQkWI3tG/TJAR3H4qpPEbnqNXbN8rzILeJ2/RTkYbfnkZ
Vv9ez4JHKg36B1b1YFv5xrqJDSz4qEe4oJTegzdUnQgd2siC3zmeoRxCLw5e
HSjQKsOCgW6bO7lhfdg6qYT7RokFhugB4zJ3AIsbWbx+pcKC2wLVjd+uD+Jq
dqdTyjYW+Idq7v4hNYS1dBb67+1kwZWWZ4o66sN4uO1m0i11FmyaqbkWkzOM
E/w3Hw/RYEHPCcht0xzBK2r2tl7QYQFDUOjK1i1sXOpUF+2kywJ2a0HxoVts
7CluTTq9hwUlmwOjLnHZWO3NiOjRvSzY8VNvwZrMwd1Wvh8o+1lgenPIKyCN
gx/8E7lOMGCB++yFz1d/cbD501hDQ2DBH4Nng2sMRrGQybZFfUMWvNwRf67h
8iguHC14p3mYBRm/1a96ZI1i17vGPtuNWHD11ZRrQccoVtJt1dlqwgKhn06i
J/+O4vZ2u6mNBBaUHc222C85hiMDZ1+Jm7OgZvdU1BbFMWykdP2cCJEFR7d2
jbFVxvBCraSqAIkFsqvEjcLkx3COS0rfLzILuCn6dpw1Y9hh7X9PJqgseKuV
MCgxM4rlCiqPDdFZ8NMkfsmSxlHcdJS26SeTBav2HLL8/GQUhwv0N7dYsSA4
7gI10n4UQ8qFqIajLBBuEBF3UBrFs6ZLLKttWGDeXuAa1MrBGeNRq0pPsACh
s49WXuHgU9EKtW9OsmDnqR9Eg60cvHFPTsir0yyI6NNablXIxg2dBw+mnGXB
zXk2PDZi45ArX/4+smeBVAnlMfnTCJ6sm/S65cQCllQKVwcP41S3IO0QFxao
rDOn/ds5jI+tF5+87MaCA5+aljhFD+Eam92OThdYoCYxOutgNojXnnZ49/gi
C04xfwjMhg3g4w5JYo3e/P2g68Y9pf141mNdjo4fC3wmTRyPSvZhpbBfc39D
WCDtdfdZ4WgXdr+tYaERyoJr+Q4powI/8Lsox8RTN/h8GPavL1rZgSmPOw7V
3GZBQGzO4VCBVhyUg29FPmBBYsa2J+K/PuFPBb+7ymNZsCC1xZkUWoulSjQ1
Z+JZ8DTG27BQuBJn1jxttkpkwbvrz83V49/gH52hcoppfH8eMM+i6Sy0dzkp
681bFuil7swukv6OroveEBp+x4KNbcy4quYO9EWinCZdyoJt1MJ58/tdyEFG
509AOQvEMlvUPVf3ohjNjYYmH1lAOPLQnhA5hHp1yfcu1fP5YRH037WRYaS+
P3ww4zOfz0FR+6wPsFG10UK4RBMLqvXvRi40jKK15v/9ONTCAhkJkE9dMY5s
yK67vdpY8N5gucmLPRNo+mj3t/ZOFmh3ZTjb508iOLlJRewnC+yiPl7V05tC
N+0oPqiHBU5S036FmVOoxelm3fk+FiharMtaK8NFCucrZZ4NsGA0V9vBJ4CL
XL3+urYMsWAPHA3b3sxFRZd134uw+fgMLEp5b+GhZVfc1u0bZUGFeXd89TEe
Il9PO+syzoLNBtek7t/ioUc3ewoSJ/l67/DO9M3koeFI6ZVfuSyY7X2VpVrO
QzoPqMeWzrAgRZG8yb2Gh4Ie3srU/cVfOw6dMizloU9PqgQc//D5OuCWnpHK
Q1Kp/ygP51nQ1jWn2hHEQ6fS9VLq//L99yvkbLDgocws91+LiywwezohVrmK
h/4H8HUQRA==
          "]]}, Annotation[#, "Charting`Private`Tag$2718#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{{}, {
        Rational[-1, 2] Pi, Rational[1, 2] Pi}}, {{}, {-1.5707963267948966`, 
        1.5707963267948966`}}], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{{}, {
        Rational[-1, 2] Pi, Rational[1, 2] Pi}}, {{}, {-1.5707963267948966`, 
        1.5707963267948966`}}], GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.812282784502469*^9, 3.8122828642529707`*^9, 3.8122841522160435`*^9, 
   3.8123180134526787`*^9, 3.8124751805835323`*^9, {3.812475458005783*^9, 
   3.812475464371355*^9}, 3.812475511017095*^9, {3.8124755708651924`*^9, 
   3.8124756110202703`*^9}, 3.8124860008319607`*^9, {3.8127164205103006`*^9, 
   3.812716439133321*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"bfcffa42-a9a3-40b3-ad87-aa95b69fed5f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", 
    RowBox[{"t_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", 
    RowBox[{"t_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", "+", 
      RowBox[{"A", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", 
    RowBox[{"t_", ",", "\[Theta]1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Omega]", " ", "t"}], "]"}]}], "-", 
      RowBox[{"h", " ", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ",", 
     RowBox[{"h", " ", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"r4", "[", 
     RowBox[{"t_", ",", "\[Theta]1_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "+", 
       RowBox[{"A", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]", " ", "t"}], "]"}]}], "-", 
       RowBox[{"h", " ", 
        RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ",", 
      RowBox[{"h", " ", 
       RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"First", "[", "solutions", "]"}]}], "}"}], "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r2", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"First", "[", "solutions", "]"}]}], "}"}], "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r3", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"First", "[", "solutions", "]"}]}], "}"}], "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r4", "[", "tp_", "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"r4", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"First", "[", "solutions", "]"}]}], "}"}], "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8122129980752335`*^9, 3.8122130192624416`*^9}, {
  3.812475215269788*^9, 3.81247523721819*^9}, {3.8124752816589804`*^9, 
  3.812475328872426*^9}, {3.8124754740635214`*^9, 3.8124754744344034`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"ece100a0-2629-4c76-8024-b142b6829d6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r2", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r3", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r3", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r2", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r1", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r2", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r3", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r4", "[", "t", "]"}], ",", "0.05"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.812213031090086*^9, 3.8122130562847013`*^9}, {
  3.81247543065269*^9, 3.8124754424824157`*^9}, {3.8124754952620745`*^9, 
  3.812475497178543*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0c1e3581-c57b-4722-85c4-d7faddad39e9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {
    251.99999999999997`, {54., 58.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r2[$CellContext`t$$]}], Black, 
         Line[{
           $CellContext`r3[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r3[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r2[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Brown, 
         Disk[
          $CellContext`r1[$CellContext`t$$], 0.05], Brown, 
         Disk[
          $CellContext`r2[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r3[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r4[$CellContext`t$$], 0.05]}, 
        PlotRange -> {{-3, 6}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{861., {76., 80.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8124754429052505`*^9, {3.812475479889145*^9, 3.812475513702021*^9}, 
   3.812486000973116*^9, {3.812716420981022*^9, 3.8127164424731555`*^9}, {
   3.8127165332070436`*^9, 3.8127165439378815`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"ed2fa06f-bd71-41c0-9238-cb3f72aa1fa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para agregar el resorte al diagrama", "Subsubsection",
 CellChangeTimes->{{3.812213129566538*^9, 
  3.812213134876972*^9}},ExpressionUUID->"e6c83e9d-ddda-4ade-bcbb-\
2166b3fb28a6"],

Cell["Ojo: no es la soluci\[OAcute]n con resorte, s\[OAcute]lo un diagrama", \
"Text",
 CellChangeTimes->{{3.8122131450754013`*^9, 
  3.8122131532608285`*^9}},ExpressionUUID->"fb473e40-51a7-4012-8d3b-\
2184aea8f29b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DropSides", "[", "l_List", "]"}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"l", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendSides", "[", 
    RowBox[{"l_List", ",", "left_", ",", "right_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "left", "}"}], ",", "l", ",", 
     RowBox[{"{", "right", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OddEven", "[", "l_List", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"l", ",", "2", ",", "2", ",", "1", ",", 
        RowBox[{"{", "}"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Source", ":", " ", "https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "21468"}], "/", "pretty"}], "-", "way", "-", "to",
      "-", "group", "-", "elements", "-", "at", "-", "odd", "-", "and", "-", 
     "even", "-", "positions"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Spring", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi_", ",", "yi_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xf_", ",", "yf_"}], "}"}], ",", "div_", ",", "width_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xPoints", ",", "slope", ",", "xyPoints", ",", "d", ",", "odd", ",", 
       "even", ",", "normalPointsOdd", ",", "normalPointsEven", ",", 
       "zigzagPts", ",", "springCoords"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xPoints", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"xi", ",", 
         RowBox[{"xf", "-", "xi"}], ",", 
         FractionBox[
          RowBox[{"xf", "-", "xi"}], "div"]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"slope", " ", "=", " ", 
       FractionBox[
        RowBox[{"yf", "-", "yi"}], 
        RowBox[{"xf", "-", "xi"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xyPoints", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"slope", 
             RowBox[{"(", 
              RowBox[{"x", "-", "xi"}], ")"}]}], "+", "yi"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"DropSides", "[", "xPoints", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"odd", ",", "even"}], "}"}], " ", "=", " ", 
       RowBox[{"OddEven", "[", "xyPoints", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d", " ", "=", " ", 
       RowBox[{"width", "*", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xf", "-", "xi"}], ",", 
           RowBox[{"yf", "-", "yi"}]}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normalPointsOdd", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             FractionBox["\[Pi]", "2"], "]"}], ".", "d"}], "+", "#"}], "&"}], 
         ",", "odd"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normalPointsEven", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             RowBox[{"-", 
              FractionBox["\[Pi]", "2"]}], "]"}], ".", "d"}], "+", "#"}], 
          "&"}], ",", "even"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zigzagPts", " ", "=", " ", 
       RowBox[{"Riffle", "[", 
        RowBox[{"normalPointsOdd", ",", "normalPointsEven"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"springCoords", " ", "=", " ", 
       RowBox[{"AppendSides", "[", 
        RowBox[{"zigzagPts", ",", 
         RowBox[{"{", 
          RowBox[{"xi", ",", "yi"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xf", ",", "yf"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", "springCoords", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[31]:=",ExpressionUUID->"3cea6840-c049-4307-bca2-101964db4070"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r2", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Black", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r3", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "[", "t", "]"}], ",", 
          RowBox[{"r3", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Orange", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r2", "[", "t", "]"}], ",", 
          RowBox[{"r4", "[", "t", "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "Red", ",", 
       RowBox[{"Spring", "[", 
        RowBox[{
         RowBox[{"r1", "[", "t", "]"}], ",", 
         RowBox[{"r4", "[", "t", "]"}], ",", "15", ",", "0.07"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r1", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Brown", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r2", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r3", "[", "t", "]"}], ",", "0.05"}], "]"}], ",", 
       "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"r4", "[", "t", "]"}], ",", "0.05"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8122132247263513`*^9, 3.812213274645549*^9}, {
  3.812486012171093*^9, 3.812486026391406*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"33662aeb-aa81-491c-9e7a-109207d0a419"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {
    251.99999999999997`, {124., 127.99999999999997`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r2[$CellContext`t$$]}], Black, 
         Line[{
           $CellContext`r3[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r1[$CellContext`t$$], 
           $CellContext`r3[$CellContext`t$$]}], Orange, 
         Line[{
           $CellContext`r2[$CellContext`t$$], 
           $CellContext`r4[$CellContext`t$$]}], Red, 
         $CellContext`Spring[
          $CellContext`r1[$CellContext`t$$], 
          $CellContext`r4[$CellContext`t$$], 15, 0.07], Brown, 
         Disk[
          $CellContext`r1[$CellContext`t$$], 0.05], Brown, 
         Disk[
          $CellContext`r2[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r3[$CellContext`t$$], 0.05], Blue, 
         Disk[
          $CellContext`r4[$CellContext`t$$], 0.05]}, 
        PlotRange -> {{-1, 3}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{854., {146., 150.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8127164214640756`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"d2abf9da-b7e9-4d81-9209-c6e91cffec0d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b72bc08c-323d-472d-8f3f-8f56bfce33d0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1642, 43, 114, "Input",ExpressionUUID->"4e2618da-5a3b-4097-b041-f21224da2dd9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2225, 67, 149, 3, 68, "Title",ExpressionUUID->"dcce7e29-b9c3-40e2-96ec-013ac707739e"],
Cell[2377, 72, 238, 6, 24, "Text",ExpressionUUID->"c8b11ec0-972b-4a99-9943-3066d129b5f0"],
Cell[2618, 80, 1320, 32, 21, "Input",ExpressionUUID->"8cebdf0f-b9f3-4138-b2d7-a7bc801d9729"],
Cell[3941, 114, 1149, 31, 76, "Input",ExpressionUUID->"73194a42-8fbc-4912-989f-b0bc2707bb66"],
Cell[CellGroupData[{
Cell[5115, 149, 297, 5, 21, "Input",ExpressionUUID->"592eaa09-2422-48a9-82c5-64782e8ab625"],
Cell[5415, 156, 1089, 27, 39, "Output",ExpressionUUID->"01ff6a4e-1d57-42cb-afc2-849d72763cc9"]
}, Open  ]],
Cell[6519, 186, 1601, 29, 103, "Input",ExpressionUUID->"a3dfbcbe-01b8-4240-9ca7-fa150794ed7f"],
Cell[8123, 217, 2702, 66, 223, "Input",ExpressionUUID->"8f8ca6f9-1f7c-45d6-96ab-b3c3b9dc9377"],
Cell[CellGroupData[{
Cell[10850, 287, 926, 22, 31, "Input",ExpressionUUID->"84d2b612-10fb-45d6-b4de-46f03af62851"],
Cell[11779, 311, 50336, 868, 162, "Output",ExpressionUUID->"bfcffa42-a9a3-40b3-ad87-aa95b69fed5f"]
}, Open  ]],
Cell[62130, 1182, 3142, 99, 131, "Input",ExpressionUUID->"ece100a0-2629-4c76-8024-b142b6829d6c"],
Cell[CellGroupData[{
Cell[65297, 1285, 2454, 63, 227, "Input",ExpressionUUID->"0c1e3581-c57b-4722-85c4-d7faddad39e9"],
Cell[67754, 1350, 2553, 56, 169, "Output",ExpressionUUID->"ed2fa06f-bd71-41c0-9238-cb3f72aa1fa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70344, 1411, 186, 3, 32, "Subsubsection",ExpressionUUID->"e6c83e9d-ddda-4ade-bcbb-2166b3fb28a6"],
Cell[70533, 1416, 216, 4, 24, "Text",ExpressionUUID->"fb473e40-51a7-4012-8d3b-2184aea8f29b"],
Cell[70752, 1422, 4622, 126, 320, "Input",ExpressionUUID->"3cea6840-c049-4307-bca2-101964db4070",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[75399, 1552, 2618, 67, 241, "Input",ExpressionUUID->"33662aeb-aa81-491c-9e7a-109207d0a419"],
Cell[78020, 1621, 2532, 56, 309, "Output",ExpressionUUID->"d2abf9da-b7e9-4d81-9209-c6e91cffec0d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

