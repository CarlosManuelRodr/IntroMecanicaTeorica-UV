(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248404,       4884]
NotebookOptionsPosition[    245318,       4823]
NotebookOutlinePosition[    245662,       4838]
CellTagsIndexPosition[    245619,       4835]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Problema de los osciladores acoplados", "Title",
 CellChangeTimes->{{3.797613333834655*^9, 
  3.797613353969257*^9}},ExpressionUUID->"815e6f1a-fed3-476a-bb8a-\
aaadb0c49d9d"],

Cell["Diagrama del problema", "Subtitle",
 CellChangeTimes->{{3.7976133561449194`*^9, 
  3.797613360241397*^9}},ExpressionUUID->"0701357d-9ca3-48b2-a16f-\
ceb9c99ffb77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Resorte", "[", 
    RowBox[{"xMin_", ",", "xMax_", ",", "div_", ",", " ", 
     RowBox[{"yMin_", " ", ":", "0"}], ",", 
     RowBox[{"yMax_", " ", ":", " ", "1"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xValues", ",", "yValues", ",", "lineCoords"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xValues", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"xMin", ",", "xMax", ",", 
         FractionBox[
          RowBox[{"xMax", "-", "xMin"}], 
          RowBox[{"div", "-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"yValues", " ", "=", " ", 
       RowBox[{"PadRight", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"yMin", ",", "yMax"}], "}"}], ",", 
         RowBox[{"Length", "[", "xValues", "]"}], ",", "\"\<Periodic\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lineCoords", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"xValues", ",", "yValues"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", "lineCoords", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Masa", "[", 
    RowBox[{"x_", ",", "label_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "color", ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0"}], "}"}], "]"}], ",", "Black", ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"label", ",", "17"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "+", "0.5"}], ",", 
         RowBox[{"0", "+", "0.5"}]}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DiagramaOsciladores", "[", 
    RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Resorte", "[", 
        RowBox[{"0", ",", 
         RowBox[{"5", "+", "x1"}], ",", "10", ",", "0.2", ",", "0.8"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Resorte", "[", 
        RowBox[{
         RowBox[{"5", "+", "x1"}], ",", 
         RowBox[{"10", "+", "x2"}], ",", "10", ",", "0.2", ",", "0.8"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Resorte", "[", 
        RowBox[{
         RowBox[{"10", "+", "x2"}], ",", "15", ",", "10", ",", "0.2", ",", 
         "0.8"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Masa", "[", 
        RowBox[{
         RowBox[{"5", "+", "x1"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(m\), \(1\)]\)\>\"", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1., 0, 0.11], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666667, 0., 0.07333333333333333],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1.`", ",", "0", ",", "0.11`"}], "]"}], NumberMarks -> 
             False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[1., 0, 0.11]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1., 0, 0.11],
          Editable->False,
          Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Masa", "[", 
        RowBox[{
         RowBox[{"10", "+", "x2"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(m\), \(2\)]\)\>\"", ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0., 0.44, 0.55], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             
             FrameStyle->RGBColor[
              0., 0.29333333333333333`, 0.3666666666666667],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"0.`", ",", "0.44`", ",", "0.55`"}], "]"}], 
             NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0., 0.44, 0.55]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0., 0.44, 0.55],
          Editable->False,
          Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"15", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"15", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.797526237366227*^9, 3.797526238651436*^9}, 
   3.7975262965178127`*^9, {3.797526347552395*^9, 3.7975263845406265`*^9}, {
   3.797526441202754*^9, 3.7975264482963867`*^9}, {3.797527359035736*^9, 
   3.797527427181774*^9}, {3.7975275761340785`*^9, 3.7975276134780893`*^9}, {
   3.797527783086687*^9, 3.797527789018027*^9}, {3.79752782835681*^9, 
   3.797527828516711*^9}, {3.797527868420158*^9, 3.797527927514769*^9}, {
   3.7975283830773325`*^9, 3.797528441499358*^9}, {3.7975285067302136`*^9, 
   3.797528512466672*^9}, {3.797529060773134*^9, 3.7975290665375843`*^9}, {
   3.797529108360849*^9, 3.7975291482113094`*^9}, {3.7975291813948793`*^9, 
   3.7975292108247633`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e6dca935-a7a3-4903-bfa6-6cb7f7227fe7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagramaOsciladores", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7975291509895964`*^9, 3.7975291753725953`*^9}, 
   3.7976971348054914`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"257a15fb-4977-41df-9d28-99d74a3b8ea7"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[NCache[{{0, 0.2}, {Rational[2, 3], 0.8}, {Rational[4, 3], 0.2}, {
      2, 0.8}, {Rational[8, 3], 0.2}, {Rational[10, 3], 0.8}, {4, 0.2}, {
      Rational[14, 3], 0.8}, {Rational[16, 3], 0.2}, {6, 0.8}}, {{0, 0.2}, {
      0.6666666666666666, 0.8}, {1.3333333333333333`, 0.2}, {2, 0.8}, {
      2.6666666666666665`, 0.2}, {3.3333333333333335`, 0.8}, {4, 0.2}, {
      4.666666666666667, 0.8}, {5.333333333333333, 0.2}, {6, 0.8}}]], 
   LineBox[NCache[{{6, 0.2}, {Rational[58, 9], 0.8}, {Rational[62, 9], 0.2}, {
      Rational[22, 3], 0.8}, {Rational[70, 9], 0.2}, {Rational[74, 9], 0.8}, {
      Rational[26, 3], 0.2}, {Rational[82, 9], 0.8}, {Rational[86, 9], 0.2}, {
      10, 0.8}}, {{6, 0.2}, {6.444444444444445, 0.8}, {6.888888888888889, 
      0.2}, {7.333333333333333, 0.8}, {7.777777777777778, 0.2}, {
      8.222222222222221, 0.8}, {8.666666666666666, 0.2}, {9.11111111111111, 
      0.8}, {9.555555555555555, 0.2}, {10, 0.8}}]], 
   LineBox[NCache[{{10, 0.2}, {Rational[95, 9], 0.8}, {
      Rational[100, 9], 0.2}, {Rational[35, 3], 0.8}, {
      Rational[110, 9], 0.2}, {Rational[115, 9], 0.8}, {
      Rational[40, 3], 0.2}, {Rational[125, 9], 0.8}, {
      Rational[130, 9], 0.2}, {15, 0.8}}, {{10, 0.2}, {10.555555555555555`, 
      0.8}, {11.11111111111111, 0.2}, {11.666666666666666`, 0.8}, {
      12.222222222222221`, 0.2}, {12.777777777777779`, 0.8}, {
      13.333333333333334`, 0.2}, {13.88888888888889, 0.8}, {
      14.444444444444445`, 0.2}, {15, 0.8}}]], 
   {RGBColor[1., 0, 0.11], EdgeForm[Thickness[Large]], RectangleBox[{6, 0}], 
    {GrayLevel[0], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(m\\), \\(1\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->17], {6.5, 0.5}]}}, 
   {RGBColor[0., 0.44, 0.55], EdgeForm[Thickness[Large]], 
    RectangleBox[{10, 0}], 
    {GrayLevel[0], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(m\\), \\(2\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->17], {10.5, 0.5}]}}, 
   {Thickness[Large], LineBox[{{0, 0}, {0, 1}}]}, 
   {Thickness[Large], LineBox[{{15, 0}, {15, 1}}]}},
  ImageSize->500]], "Output",
 CellChangeTimes->{{3.797697127866764*^9, 3.7976971366203737`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"605e272a-523c-49b5-bf1c-7e128328fbd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n numerica", "Subtitle",
 CellChangeTimes->{{3.7976133733663197`*^9, 
  3.7976133782672987`*^9}},ExpressionUUID->"5bfda5cd-2cd5-4812-b7bb-\
c5e9f138a127"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kP", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"m1Solution", ",", "m2Solution"}], "}"}], " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", 
         RowBox[{"x1", "[", "t", "]"}]}], " ", "+", 
        RowBox[{"kP", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x2", "[", "t", "]"}], "-", 
           RowBox[{"x1", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", 
         RowBox[{"x2", "[", "t", "]"}]}], " ", "+", 
        RowBox[{"kP", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], "-", 
           RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"x1", "'"}], "[", "0", "]"}], " ", "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "[", "t", "]"}], ",", 
      RowBox[{"x2", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7975295491944637`*^9, 3.7975297346952667`*^9}, 
   3.797529841299642*^9, {3.797537791234685*^9, 3.7975377919282494`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"298c8b71-e516-4a63-9c3d-7c5fb4e2708f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4/Pf/////vP0XRMWw0
Ffo/lUoZhSft3b8FZS60Bi4LQMvVg0YI09a/aslGZ8wwFEBEt9/mP7jTP8qC
eNpvqRpAsYJIORnovT8VebNxPtcgQK0f13yMpM0/IB09Xc4dJECPqDTlhvDq
vykcpROTqidADQbykl6A3z9wLA79xCYrQCJ0oyZGWOA/EKmJTQBnLkB+efu0
8nzrv1jAcTS49jBAdPIEIJE41T9V4qf19JsyQPUB1SNKP8A/8YxeUOg4NEDP
zN40ns7QPwxlhBD2+DVAFRGsbhxx0r9VczOECJs3QIkf5p3Kldi/Hq9RXTVg
OUC3aFmTPjvvP4Vz8M8YHTtADI4Ieuqw378Zbhj2ALw8QMYo3Lcs39e/LZav
gQN+PkAHvoBthi7jPzj6Z2AFEUBA+rHHn+Iotb8ZwK8ylvRAQMdedcERhqw/
Scq3UQLUQUAoSphWMnDav49vhMpwpEJAw9Ou9dR+2T+Vqwh2bIZDQCizZTIU
ROA/soJRe2pZREDkrDTwosHvvx6eWs1DKEVAEUDH1mm72j9KUBtSqghGQIh4
dFNHyNI/jZ2gMBPaRkCJy4shz1O/v4+B3UEJvUdAW6naRZprsr/hqdqf2ptI
QKvGI1Wzus+/SW2cV65rSUCqfrYZk73qP3HHFUIPTUpAYQSeKuAo3L+wvFOG
ch9LQKzJNporHuC/PvZRF7HtS0BL/jOE8+DnP4zGB9t8zUxAE+8T8pBD0L/w
MYL4Sp5NQATiS8i16Yq/FDS0SKaATkCTM/ghw+bPv0/RqvIDVE9AeHaStZ/1
1T9t2bB0nhFQQDFvdYI5mto/khVoiQGCUEBxMt+bGfnvv0KfAcvl6lBAOC8w
3nTP3z9S9PalkFxRQL8McTTGNdc/imtMJynMUUA5wUHF+Mffv00whNVCNFJA
8L7YzoFZdT9wwBcdI6VSQK8IRttYDsK/H56NkYQOU0AuKq3rJu/lP/WdY6zT
dVNAGEz5F5H84L8raZVg6eVTQJXtSNDbdN6/7IGpQYBOVEDe5yH/NLjrPw1m
Gbzdv1RAZ8qQNAoS179WbOncKC9VQMJ38Fv0Ncy/KsCbKvWWVUBov98lLMex
v17fqRGIB1ZASWg8hwqixj8dTJolnHBWQPnm1uuT6NY/PITm0nbiVkAui6DW
A7Psv4PekiY/UldAbIa7avp43D9VhiGniLpXQMKhwqV1z94/h/kLwZgrWEBr
22mP4n/pv0W62AcqlVhAeWui4O1Gyj8+GeT4//9YQOb81/wKCXg/YBXZTA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3112#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-0.9991577190754254, 
                  0.9999999999944648}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4/Pf/////vP0XRMWw0
Ffo/lUoZhSft3b8FZS60Bi4LQMvVg0YI09a/aslGZ8wwFEBEt9/mP7jTP8qC
eNpvqRpAsYJIORnovT8VebNxPtcgQK0f13yMpM0/IB09Xc4dJECPqDTlhvDq
vykcpROTqidADQbykl6A3z9wLA79xCYrQCJ0oyZGWOA/EKmJTQBnLkB+efu0
8nzrv1jAcTS49jBAdPIEIJE41T9V4qf19JsyQPUB1SNKP8A/8YxeUOg4NEDP
zN40ns7QPwxlhBD2+DVAFRGsbhxx0r9VczOECJs3QIkf5p3Kldi/Hq9RXTVg
OUC3aFmTPjvvP4Vz8M8YHTtADI4Ieuqw378Zbhj2ALw8QMYo3Lcs39e/LZav
gQN+PkAHvoBthi7jPzj6Z2AFEUBA+rHHn+Iotb8ZwK8ylvRAQMdedcERhqw/
Scq3UQLUQUAoSphWMnDav49vhMpwpEJAw9Ou9dR+2T+Vqwh2bIZDQCizZTIU
ROA/soJRe2pZREDkrDTwosHvvx6eWs1DKEVAEUDH1mm72j9KUBtSqghGQIh4
dFNHyNI/jZ2gMBPaRkCJy4shz1O/v4+B3UEJvUdAW6naRZprsr/hqdqf2ptI
QKvGI1Wzus+/SW2cV65rSUCqfrYZk73qP3HHFUIPTUpAYQSeKuAo3L+wvFOG
ch9LQKzJNporHuC/PvZRF7HtS0BL/jOE8+DnP4zGB9t8zUxAE+8T8pBD0L/w
MYL4Sp5NQATiS8i16Yq/FDS0SKaATkCTM/ghw+bPv0/RqvIDVE9AeHaStZ/1
1T9t2bB0nhFQQDFvdYI5mto/khVoiQGCUEBxMt+bGfnvv0KfAcvl6lBAOC8w
3nTP3z9S9PalkFxRQL8McTTGNdc/imtMJynMUUA5wUHF+Mffv00whNVCNFJA
8L7YzoFZdT9wwBcdI6VSQK8IRttYDsK/H56NkYQOU0AuKq3rJu/lP/WdY6zT
dVNAGEz5F5H84L8raZVg6eVTQJXtSNDbdN6/7IGpQYBOVEDe5yH/NLjrPw1m
Gbzdv1RAZ8qQNAoS179WbOncKC9VQMJ38Fv0Ncy/KsCbKvWWVUBov98lLMex
v17fqRGIB1ZASWg8hwqixj8dTJolnHBWQPnm1uuT6NY/PITm0nbiVkAui6DW
A7Psv4PekiY/UldAbIa7avp43D9VhiGniLpXQMKhwqV1z94/h/kLwZgrWEBr
22mP4n/pv0W62AcqlVhAeWui4O1Gyj8+GeT4//9YQOb81/wKCXg/YBXZTA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3112#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-0.9991577190754254, 
                  0.9999999999944648}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 100.}}, {
      5, 7, 2, {1611}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2FMMIDCiQNHB7ti2bdu2bdu2bdu2bdu2bRvv7JsmJ+l3m5sifoO2FdoE
DBAgQKkgAf5/BOZ/0+CEIiwRiEw0YhKH+CQiKSlITToykoXs5CIvBShMMUpS
hvJUoio1qE09GtKE5rSiLR3oTDd60of+DGIoIxjNOCYyhenMYi4LWMwyVrKG
9WxiKzvYzT4OcoTjnOIsF7jMNW5yh/s84ikveM07PvKF7/ziL4Es8H8JRkjC
EJ5IRCUGsYlHQpKQnFSkJQOZyUZO8pCfQhSlBKUpR0WqUJ1a1KUBjWlGS/63
4e3pRFd60Jt+DGQIwxnFWCYwmWnMZA7zWcRSVrCadWxkC9vZxV4OcJhjnOQM
57nEVW5wm3s85AnPecVbPvCZb/zkDwEDBQjwH4ISgtCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD34H+xR+YIAQnFGGJQGSiEZM4xCcRSUlBatKRkSxkJxd5KUBhilGS
MpSnElWpQW3q0ZAmNKcVbelAZ7rRkz70ZxBDGcFoxjGRKUxnFnNZwGKWsZI1
rGcTW9nBbvZxkCMc5xRnucBlrnGTO9znEU95wWve8ZEvfOcXfwn0H/0TjJCE
ITyRiEoMYhOPhCQhOalISwYyk42c5CE/hShKCUpTjopUoTq1qEsDGtOMlrSh
PZ3oSg9604+BDGE4oxjLBCYzjZnMYT6LWMoKVrOOjWxhO7vYywEOc4yTnOE8
l7jKDW5zj4c84TmveMsHPvONn/wh4H/1T1BCEJpwRCQK0YlFXBKQmGSkJA3p
yURWcpCbfBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZ
xFRmMJt5LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nE
V37w+7//Dv7ABCE4oQhLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8
lahKDWpTj4Y0oTmtaEsHOtONnvShP4MYyghGM46JTGE6s5jLAhazjJWsYT2b
2MoOdrOPgxzhOKc4ywUuc42b3OE+j3jKC17zjo984Tu/+EugoPonGCEJQ3gi
EZUYxCYeCUlCclKRlgxkJhs5yUN+ClGUEpSmHBWpQnVqUZcGNKYZLWlDezrR
lR70ph8DGcJwRjGWCUxmGjOZw3wWsZQVrGYdG9nCdnaxlwMc5hgnOcN5LnGV
G9zmHg95wnNe8ZYPfOYbP/lDwGD6JyghCE04IhKF6MQiLglITDJSkob0ZCIr
OchNPgpShOKUoiwVqEw1alKH+jSiKS1oTTs60oXu9KIvAxjMMEYyhvFMYioz
mM08FrKE5axiLRvYzDZ2sof9HOIoJzjNOS5yhevc4i4PeMwzXvKG93ziKz/4
HezfpT8wQQhOKMISgchEIyZxiE8ikpKC1KQjI1nITi7yUoDCFKMkZShPJapS
g9rUoyFNaE4r2tKBznSjJ33ozyCGMoLRjGMiU5jOLOaygMUsYyVrWM8mtrKD
3ezjIEc4zinOcoHLXOMmd7jPI57ygte84yNf+M4v/hIohP4JRkjCEJ5IRCUG
sYlHQpKQnFSkJQOZyUZO8pCfQhSlBKUpR0WqUJ1a1KUBjWlGS9rQnk50pQe9
6cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nHRrawnV3s5QCHOcZJznCeS1zlBre5
x0Oe8JxXvOUDn/nGT/4QMKT+CUoIQhOOiEQhOrGISwISk4yUpCE9mchKDnKT
j4IUoTilKEsFKlONmtShPo1oSgta046OdKE7vejLAAYzjJGMYTyTmMoMZjOP
hSxhOatYywY2s42d7GE/hzjKCU5zjotc4Tq3uMsDHvOMl7zhPZ/4yg9+h/z3
4A9MEIITirBEIDLRiEkc4pOIpKQgNenISBayk4u8FKAwxShJGcpTiarUoDb1
aEgTmtOKtnSgM93oSR/6M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4
yBGOc4qzXOAy17jJHe7ziKe84DXv+MgXvvOLvwQKrX+CEZIwhCcSUYlBbOKR
kCQkJxVpyUBmspGTPOSnEEUpQWnKUZEqVKcWdWlAY5rRkja0pxNd6UFv+jGQ
IQxnFGOZwGSmMZM5zGcRS1nBataxkS1sZxd7OcBhjnGSM5znEle5wW3u8ZAn
POcVb/nAZ77xkz8EDKN/ghKC0IQjIlGITizikoDEJCMlaUhPJrKSg9zkoyBF
KE4pylKBylSjJnWoTyOa0oLWtKMjXehOL/oygMEMYyRjGM8kpjKD2cxjIUtY
zirWsoHNbGMne9jPIY5ygtOc4yJXuM4t7vKAxzzjJW94zye+8oPfYf599gUm
CMEJRVgiEJloxCQO8UlEUlKQmnRkJAvZyUVeClCYYpSkDOWpRFVqUJt6NKQJ
zWlFWzrQmW70pA/9GcRQRjCacUxkCtOZxVwWsJhlrGQN69nEVnawm30c5AjH
OcVZLnCZa9zkDvd5xFNe8Jp3fOQL3/nFXwKF0z/BCEkYwhOJqMQgNvFISBKS
k4q0ZCAz2chJHvJTiKKUoDTlqEgVqlOLujSgMc1oSRva04mu9KA3/RjIEIYz
irFMYDLTmMkc5rOIpaxgNevYyBa2s4u9HOAwxzjJGc5ziavc4Db3eMgTnvOK
t3zgM9/4yR8Chtc/QQlBaMIRkShEJxZxSUBikpGSNKQnE1nJQW7yUZAiFKcU
ZalAZapRkzrUpxFNaUFr2tGRLnSnF30ZwGCGMZIxjGcSU5nBbOaxkCUsZxVr
2cBmtrGTPeznEEc5wWnOcZErXOcWd3nAY57xkje85xNf+cHv8P8++gMThOCE
IiwRiEw0YhKH+CQiKSlITToykoXs5CIvBShMMUpShvJUoio1qE09GtKE5rSi
LR3oTDd60of+DGIoIxjNOCYyhenMYi4LWMwyVrKG9WxiKzvYzT4OcoTjnOIs
F7jMNW5yh/v8Hza1WOs=
       "], CompressedData["
1:eJxU13c01m/cB/DbVslqSaRUVLIqlNTnDqXsmSQjRUaSlJ+QlUTDClFmCGVl
ZOZz2zt7733be6/Hc87zz3P9932d63udc51rvT/HDSxUDSkIBEIfK+H/2gwQ
/l+jJz27Vbq2vT0NSy7Hyr485MHqAc2dbzqSepvGzP+659e2gi8PRfHpL7rp
/3UdjRfXFnd8WbPBUDHVGq361u8u7Hj39+yolh1/zHdohZfghn8CSmUad9yR
WvJEzI6HPbVYl1XzRs2WDzlhO86XHVr3fcfVZS8kuf7xxt7blXu/7XgeaBqF
7rjZBJ9S3mEf/JJ1TTpgx62+mvUF7XiL7XD7sr0P0u4e1/XZ8ciaDkn/Hf9x
ZEZFuNcHf1yv1fm448WDMe+9d5xisSnVVMoXDz2eIr7b8fPty8NuO25l+EK+
a9dnzI4IrrHf8W/2GZ32O145NvFRqfYzjhUKTFvuuN7asNnzHR/KjLXMD/DD
zwzRYUY73qm2sja/NQ1FxOYYTs1gZLF0jO7aoiPRsWbbKux4I3f9zcg93/FU
RNKNMzu+m/XuhMPmNHAHVB38Mh6NcneCnW9v0pEke2RU3DemQVd36PrDyjis
PLdX+9oGHYm3ydI7b3Ya7vFZHuE+mY03FG9Eec7szHeEWyW6ZxrKfG7ZL8UX
YlN5B/tCJx0pJ/Gzn2TJNPB+z9rSul6B1Hl7aazz6Ug0DjfzQqOnwWvhsOU7
o1pMDDP9eDSUjhTBsiuo6PU0/OQcaVz80YAXv9cVrj2nI8kE3bo8d2Aa+n8e
pb92uR0XYogvflDSkXZxnvJL9Z6ChPhbwhFqvRh/q5M1+Dkt6Y39ZfpK5inQ
/1vE0dDaj1zW8WBDpiEp3LU4UukwCekHYq5eUhjCfqPO4nlZGlLAmHivSMcE
GFaw10QnjqCBsvCe+K/UJBXBlOFgnglwGPRYoFofRcl3QSIqrVQkUhRLfPiD
cfhGGdGtJDSB9zQ+P4qmpiKJvKZdm/44Bl+SvpeGyE+hxrm/s3bHKElamlKJ
z+fIoNUlVjLfO4NcAtcslEwIJAJxpWOOfwSaPLOuW5vPoSuT4+xZxs2ddWtL
kZQegnTbPNG60nlcVTjz79r2CvJdKcz8LD4Av1nm732dWMDu2TF3vZQFFLBW
yzE62AfvhIw8GdoWMfbg6mLVxRnUDTqVsZjdBdq+504yf1jCRYp9i4mnR3BZ
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
m2TAAJTZjtbc3V0L5MIK4YtPPLFmqzC4vGwAZHy+ZepufoTXjaxjzF3+oGhh
JxX+bgA8lGIP8grX48E90OCyHA80DbulmjL6YeCHz6uh//qx/lHQwcTNP+An
qSH7UKcPtCtLD956PY5cq2nXpf7mgTJ9z7s/m92Q4pxOU7U1i/1tNiYXsAC+
ZUf5fpJtB/2rCyeoyYuYuxK2Z9i1GK5aR+3azmiEpS8e3588XkXyHUHF7YBS
sPdkT5rJrwLZXapyFE82MIwh4smZ3jJ4UybTF+b9F2rMDzIND29hsBRTKodM
OWT/MuXgpQ3H5pOlLkt+BJK3ZYlYjFQZFCkvjSY2lWKJicvQncsUJJsPV5fz
S4th4bdMKwVTM2buerir/x4Fif1e7JhPbT5cr5wXWGTqxc8PFX1fLhNIZhVX
7vNXZ8LWYos9FXkQWaleXvViJpCSnCw9ea1/wPmeJqcuk1G0KCh1c7+zicIL
wiaO+p9R0YeskGY5iaVJpy4Rw1fx5c3C29JHMtD8h/20lsUMnjf4ONV8YBEd
ZdQK1LQK0OGacizp8Swyncg+u/VxFmPiVGbVHcsxt8ktoEloDlMTJwzono9j
o5aN58rLWmytGzfiKp3DegJjXYjcAK5K8XAcutGIEWVKooW888hqKpZi59SE
j8lvztNxt2KWx5yup/I8Mqdmzl2KT8T0aUp3U4pOtK/YOLcF82h/XdA17WEV
1EjQ6ca09KCa0AW9G4tzyPUwr+m6QC+U6KuvU/L149H1d19zFOfQnXXZsZxq
HLQfWurzqAyimbm5ymeNWXSV3FyOqpwDX5oPJpbqw6jpcfCJG8MMRr0pfrHU
sQyC3b9ZXfjIGGhx8JDz9ARymx5Juv9tA5pO0ch/rB5FZ4bnuV8vj+Lj5nfX
Ol4RiH/6qDZczu/Mm/oDPwXNTl5QndBVNaYk0tPq511Vm0D+KrXupAe9mHWs
03qBiZqYnGyX8vXMJEafDWbSK2zGfeJB253GNMQtac6cb8mTOPLCWPLQwzKU
WH0z5/aElhigkBDjMDiJFXV66t/efEYkXoXxA3TEuMLmppqCSbz4SLLu6Uoh
ZMwkPwx8QEfMpbu8YC07iTMdhPmT15pg0u9tVoECHfHs89S4v3YTuMfc8liO
YC8UOzmdU2inJYqZ0lIo3x3H6bGOu6JBQ+DZYiNcQU9LzJAS8RcdGMU7j03Y
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
aSU+u875JjKoEZ/5giXp8Aoo7Sv4d+JmNb4py1i9vFGOiot/3iweWwfvfVnt
8g41mMdUaDEykYH3pAfr2hM34c9DzkcsoTV4wMxDZ30xAUKlI83+TdMQ6mv5
vAyuVeNEgj31xFwljBzwCeX2oiVYOrDGtb6vQJ0F1hNPNdrA1NvZ83wULUGz
5PDTe8pbOUKnu3DtLAmiUv4aPThJS9jORH0k9oyIRYZHVgIOUuH2p7xRxss0
hC+H6E8IBafggJ4gu2bOCMhIO9gV5q5DDDse8Tz+Gm+UutzMrJ2AQkPDetmF
ZRAYeFfGqZEMZzPTvniLTsPvX1R7+tvzYMN/INTHGuEqb44ydc8M2Ox7+pVa
Ng0fG9YP1IuVwvTgp8f2IzNgJlgE9C2jIOPu8amkvQbusnr5NbrMgk3j832v
vg+AgKdT7/v7jbDwq0dtP2UWetxMrxmtN4N3ZPPusw9agWnhnZAS5xxcNfNr
GclJAvPlCJcok05YSq/d77c5CxNHzAuF5yvxIs0rfu4HvWDB5fbQJn0WvG1e
K/OJ9iFfnBj3BFM/yM+VibBzzsJFXM4lbB/FgNtCVmWqZNB9Jrb6mncGYrSu
Fl3tmMGzQ7tsc+9Q4dcBewaXyik4KqqWqzS3iFpaggMGl4aAo1IxwN9863ws
zGv6ctcw+ppXawn9CPxy+qdZlzQCm6d1pgU+0xAZLaxDht6OQoXTn3N3X1Bh
19fLuePOdETNF5z6H9LHYFNpDzOhZot/wmbu18syEMsOTic6hI9DF1/EX9rP
7bC4cpKe8pGRmFAtuxB/egK6mnpOhnZWg6/maG+ULxPxV0nXUT23CfCt9l7t
F0iEzOjuz3wEZmLGVcncKfsJWJM30jX2ycMf5Fnbws/MRBoft2a9nVtzOWvi
9ZwG/Oa2p5XkyEyUyL1hWKQ/DuM0re+DZ7vR023tsz4XM1HnHA00XhyDNJuY
9NzHZFQJ1m3NVGEiBhQbvnYkb72nQACPbMww+gV2PTklyEh0h3VjboVhCLTB
zWrvCWTSi1bKCKYnzpdqxXMpD0K7j5yt9odpnF5vUnldTUusatm9IL1OhvYn
JRHHvWaxr9P/mr/1Jv5aPaMo7N4PhKuXns9rzaOl6ef354tXsPDtkRIm7IWT
ySPWn4sXcOj3xpUTSfNoZmqp4CXSASGnaYauDS8iC/cRWef/33s/selTq9oE
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

       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AGCx4vjqQPUXRMWw0
Ffo/NrwdgdUg2j8FZS60Bi4LQAYcnevBi+O/aslGZ8wwFECvRKp3qGaVP8qC
eNpvqRpABCqIsqjz6T8VebNxPtcgQAiWWYIPlei/IB09Xc4dJEA9odhcsVyi
PykcpROTqidAhom0QFoN0D9wLA79xCYrQMhgdaZbJ5Y/EKmJTQBnLkDeZnzv
O1iPv1jAcTS49jBAcizCaWOG5L9V4qf19JsyQHu1gXWyBOs/8YxeUOg4NECd
sV5ORtuwvwxlhBD2+DVAGnoqOQXG5r9VczOECJs3QIdHjrrJYNs/Hq9RXTVg
OUAIuKSJZwh2v4Vz8M8YHTtAcScCyA2xuD8Zbhj2ALw8QIZ5JeqrvOC/LZav
gQN+PkAQZ7CFi0xsPzj6Z2AFEUBAEEz6lM/D6j8ZwK8ylvRAQCJINzlLUuu/
Scq3UQLUQUDTB/5+H0ilv49vhMpwpEJANrcvxiGL4D+Vqwh2bIZDQOAzrgoc
ldK/soJRe2pZREBWA+9eTkFkPx6eWs1DKEVAtB9tMYd24L9KUBtSqghGQEgU
T1oBfuY/jZ2gMBPaRkA2YlEVB1ecv4+B3UEJvUdAiWOBSo6567/hqdqf2ptI
QLYkcKjh6ec/SW2cV65rSUAC6rhInaFpP3HHFUIPTUpAQMnB4oAy0L+wvFOG
ch9LQP1XE+GyGMW/PvZRF7HtS0DpYXgO9YaYP4zGB9t8zUxAlvPJ+SXe5z/w
MYL4Sp5NQJF2/bPxV+y/FDS0SKaATkCECbbGiD5wv0/RqvIDVE9AdTVS1WCH
5D9t2bB0nhFQQBy96+NOedK/khVoiQGCUEDreqs78U5LP0KfAcvl6lBAXWfy
8/zD179S9PalkFxRQG9gw/Sop+I/imtMJynMUUAQeBXfWKKLP00whNVCNFJA
ZBT7a6NH679wwBcdI6VSQJydwYyTZOo/H56NkYQOU0BKfWvn/42Dv/WdY6zT
dVNAKG2U3/wNzr8raZVg6eVTQJ9mXmWa8JO/7IGpQYBOVEBQfFYPS2+gPw1m
Gbzdv1RAHbksvNaV4z9WbOncKC9VQJYfS24k1Oi/KsCbKvWWVUCkxEadupih
P17fqRGIB1ZA7basn6/36T8dTJolnHBWQP+d9zcbkeK/PITm0nbiVkDwScsu
g9OGv4PekiY/UldAc8/cVEQvwD9VhiGniLpXQFOUeu0Ne9M/h/kLwZgrWEAM
R5mMThqjP0W62AcqlVhAYIdFQI1o6b8+GeT4//9YQDmkn8IJaOs/t17D7Q==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3169#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-0.8857353702002958, 
                  0.8564499665491275}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AGCx4vjqQPUXRMWw0
Ffo/NrwdgdUg2j8FZS60Bi4LQAYcnevBi+O/aslGZ8wwFECvRKp3qGaVP8qC
eNpvqRpABCqIsqjz6T8VebNxPtcgQAiWWYIPlei/IB09Xc4dJEA9odhcsVyi
PykcpROTqidAhom0QFoN0D9wLA79xCYrQMhgdaZbJ5Y/EKmJTQBnLkDeZnzv
O1iPv1jAcTS49jBAcizCaWOG5L9V4qf19JsyQHu1gXWyBOs/8YxeUOg4NECd
sV5ORtuwvwxlhBD2+DVAGnoqOQXG5r9VczOECJs3QIdHjrrJYNs/Hq9RXTVg
OUAIuKSJZwh2v4Vz8M8YHTtAcScCyA2xuD8Zbhj2ALw8QIZ5JeqrvOC/LZav
gQN+PkAQZ7CFi0xsPzj6Z2AFEUBAEEz6lM/D6j8ZwK8ylvRAQCJINzlLUuu/
Scq3UQLUQUDTB/5+H0ilv49vhMpwpEJANrcvxiGL4D+Vqwh2bIZDQOAzrgoc
ldK/soJRe2pZREBWA+9eTkFkPx6eWs1DKEVAtB9tMYd24L9KUBtSqghGQEgU
T1oBfuY/jZ2gMBPaRkA2YlEVB1ecv4+B3UEJvUdAiWOBSo6567/hqdqf2ptI
QLYkcKjh6ec/SW2cV65rSUAC6rhInaFpP3HHFUIPTUpAQMnB4oAy0L+wvFOG
ch9LQP1XE+GyGMW/PvZRF7HtS0DpYXgO9YaYP4zGB9t8zUxAlvPJ+SXe5z/w
MYL4Sp5NQJF2/bPxV+y/FDS0SKaATkCECbbGiD5wv0/RqvIDVE9AdTVS1WCH
5D9t2bB0nhFQQBy96+NOedK/khVoiQGCUEDreqs78U5LP0KfAcvl6lBAXWfy
8/zD179S9PalkFxRQG9gw/Sop+I/imtMJynMUUAQeBXfWKKLP00whNVCNFJA
ZBT7a6NH679wwBcdI6VSQJydwYyTZOo/H56NkYQOU0BKfWvn/42Dv/WdY6zT
dVNAKG2U3/wNzr8raZVg6eVTQJ9mXmWa8JO/7IGpQYBOVEBQfFYPS2+gPw1m
Gbzdv1RAHbksvNaV4z9WbOncKC9VQJYfS24k1Oi/KsCbKvWWVUCkxEadupih
P17fqRGIB1ZA7basn6/36T8dTJolnHBWQP+d9zcbkeK/PITm0nbiVkDwScsu
g9OGv4PekiY/UldAc8/cVEQvwD9VhiGniLpXQFOUeu0Ne9M/h/kLwZgrWEAM
R5mMThqjP0W62AcqlVhAYIdFQI1o6b8+GeT4//9YQDmkn8IJaOs/t17D7Q==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$3169#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 100.}, {-0.8857353702002958, 
                  0.8564499665491275}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 100.}}, {
      5, 7, 2, {1611}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2FMMIDCiQNHB7ti2bdu2bdu2bdu2bdu2bRvv7JsmJ+l3m5sifoO2FdoE
DBAgQKkgAf5/BOZ/0+CEIiwRiEw0YhKH+CQiKSlITToykoXs5CIvBShMMUpS
hvJUoio1qE09GtKE5rSiLR3oTDd60of+DGIoIxjNOCYyhenMYi4LWMwyVrKG
9WxiKzvYzT4OcoTjnOIsF7jMNW5yh/s84ikveM07PvKF7/ziL4Es8H8JRkjC
EJ5IRCUGsYlHQpKQnFSkJQOZyUZO8pCfQhSlBKUpR0WqUJ1a1KUBjWlGS/63
4e3pRFd60Jt+DGQIwxnFWCYwmWnMZA7zWcRSVrCadWxkC9vZxV4OcJhjnOQM
57nEVW5wm3s85AnPecVbPvCZb/zkDwEDBQjwH4ISgtCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD34H+xR+YIAQnFGGJQGSiEZM4xCcRSUlBatKRkSxkJxd5KUBhilGS
MpSnElWpQW3q0ZAmNKcVbelAZ7rRkz70ZxBDGcFoxjGRKUxnFnNZwGKWsZI1
rGcTW9nBbvZxkCMc5xRnucBlrnGTO9znEU95wWve8ZEvfOcXfwn0H/0TjJCE
ITyRiEoMYhOPhCQhOalISwYyk42c5CE/hShKCUpTjopUoTq1qEsDGtOMlrSh
PZ3oSg9604+BDGE4oxjLBCYzjZnMYT6LWMoKVrOOjWxhO7vYywEOc4yTnOE8
l7jKDW5zj4c84TmveMsHPvONn/wh4H/1T1BCEJpwRCQK0YlFXBKQmGSkJA3p
yURWcpCbfBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZ
xFRmMJt5LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nE
V37w+7//Dv7ABCE4oQhLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8
lahKDWpTj4Y0oTmtaEsHOtONnvShP4MYyghGM46JTGE6s5jLAhazjJWsYT2b
2MoOdrOPgxzhOKc4ywUuc42b3OE+j3jKC17zjo984Tu/+EugoPonGCEJQ3gi
EZUYxCYeCUlCclKRlgxkJhs5yUN+ClGUEpSmHBWpQnVqUZcGNKYZLWlDezrR
lR70ph8DGcJwRjGWCUxmGjOZw3wWsZQVrGYdG9nCdnaxlwMc5hgnOcN5LnGV
G9zmHg95wnNe8ZYPfOYbP/lDwGD6JyghCE04IhKF6MQiLglITDJSkob0ZCIr
OchNPgpShOKUoiwVqEw1alKH+jSiKS1oTTs60oXu9KIvAxjMMEYyhvFMYioz
mM08FrKE5axiLRvYzDZ2sof9HOIoJzjNOS5yhevc4i4PeMwzXvKG93ziKz/4
HezfpT8wQQhOKMISgchEIyZxiE8ikpKC1KQjI1nITi7yUoDCFKMkZShPJapS
g9rUoyFNaE4r2tKBznSjJ33ozyCGMoLRjGMiU5jOLOaygMUsYyVrWM8mtrKD
3ezjIEc4zinOcoHLXOMmd7jPI57ygte84yNf+M4v/hIohP4JRkjCEJ5IRCUG
sYlHQpKQnFSkJQOZyUZO8pCfQhSlBKUpR0WqUJ1a1KUBjWlGS9rQnk50pQe9
6cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nHRrawnV3s5QCHOcZJznCeS1zlBre5
x0Oe8JxXvOUDn/nGT/4QMKT+CUoIQhOOiEQhOrGISwISk4yUpCE9mchKDnKT
j4IUoTilKEsFKlONmtShPo1oSgta046OdKE7vejLAAYzjJGMYTyTmMoMZjOP
hSxhOatYywY2s42d7GE/hzjKCU5zjotc4Tq3uMsDHvOMl7zhPZ/4yg9+h/z3
4A9MEIITirBEIDLRiEkc4pOIpKQgNenISBayk4u8FKAwxShJGcpTiarUoDb1
aEgTmtOKtnSgM93oSR/6M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4
yBGOc4qzXOAy17jJHe7ziKe84DXv+MgXvvOLvwQKrX+CEZIwhCcSUYlBbOKR
kCQkJxVpyUBmspGTPOSnEEUpQWnKUZEqVKcWdWlAY5rRkja0pxNd6UFv+jGQ
IQxnFGOZwGSmMZM5zGcRS1nBataxkS1sZxd7OcBhjnGSM5znEle5wW3u8ZAn
POcVb/nAZ77xkz8EDKN/ghKC0IQjIlGITizikoDEJCMlaUhPJrKSg9zkoyBF
KE4pylKBylSjJnWoTyOa0oLWtKMjXehOL/oygMEMYyRjGM8kpjKD2cxjIUtY
zirWsoHNbGMne9jPIY5ygtOc4yJXuM4t7vKAxzzjJW94zye+8oPfYf599gUm
CMEJRVgiEJloxCQO8UlEUlKQmnRkJAvZyUVeClCYYpSkDOWpRFVqUJt6NKQJ
zWlFWzrQmW70pA/9GcRQRjCacUxkCtOZxVwWsJhlrGQN69nEVnawm30c5AjH
OcVZLnCZa9zkDvd5xFNe8Jp3fOQL3/nFXwKF0z/BCEkYwhOJqMQgNvFISBKS
k4q0ZCAz2chJHvJTiKKUoDTlqEgVqlOLujSgMc1oSRva04mu9KA3/RjIEIYz
irFMYDLTmMkc5rOIpaxgNevYyBa2s4u9HOAwxzjJGc5ziavc4Db3eMgTnvOK
t3zgM9/4yR8Chtc/QQlBaMIRkShEJxZxSUBikpGSNKQnE1nJQW7yUZAiFKcU
ZalAZapRkzrUpxFNaUFr2tGRLnSnF30ZwGCGMZIxjGcSU5nBbOaxkCUsZxVr
2cBmtrGTPeznEEc5wWnOcZErXOcWd3nAY57xkje85xNf+cHv8P8++gMThOCE
IiwRiEw0YhKH+CQiKSlITToykoXs5CIvBShMMUpShvJUoio1qE09GtKE5rSi
LR3oTDd60of+DGIoIxjNOCYyhenMYi4LWMwyVrKG9WxiKzvYzT4OcoTjnOIs
F7jMNW5yh/v8Hza1WOs=
       "], CompressedData["
1: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
uMTbD6VzHm7nQufQiWRicKxkFP94h0/QyHaDsdtJf0PZeQxOuDibkdiNnP8u
q5kIt4GwHp2LjOM8egUcbbuR/w+3VXkXt7E3whOd/2i32czjTOGjLomdVWDt
dWMMaauAL/aWhgfPPDr8Pl+e/qkffBesYpqPFIAo/bJKqdkctpUZ/mgIGweH
4JTDB++nwuBrkqnI01mM9PzuQXKmgtzcw1THUQMco1epUDxDxZRcwo6KygUw
OMpCa3E8HS8yOuJNawp6pT5rOXp5FSxaFpm2tRfgWT+j89/yJlDt8cQlcZpN
KA7so4u5VYGUsdguT8ERPCjAbxo2RkOQ/GlEPH2+Dre7WSq9OE5CJY6eHuVu
WkIx95G7syENOFTA7qrD04UVo32MZ3XpCEsN2Xcvyjehf2bff+Hx9fjR6g9n
rRodgW/a66SbQDOOtzg+443Kw3E2Lhu/YlrCUf/1nG3qzchXcbStWesH7Hrk
chjKaAg82kaUNcZmLL2Tm8rtlQ9FZr96+lM3wX/R6ank0ybkl298w/esGr6m
VKywWK3DZfd9ATzBjXhPQfcZh0wT8PLN/M5uWIGfcuePMjg24KlLUo++CbfD
1ca+FzUDi8DYxyXEL1aPZeIFuz85dEM2z0ICf/wc6Do53VRWqsWL0vtTTT5v
cUV7+hXtkzPAWSiRuo1UiX/vKlKjdg2A1pnTO4lb9afw6WXz26dleOI/fXaf
oyQg6F3fN9lNghsOnnHjbUVYNihUojxKgpYNj3NclDZ46GbLfeFQPraG8X/b
q0WG6Vazz9U9hVAy/DX+Z3E2NtmZF+gYkGGvR4q91cN0tN9+50C95m+8cXxt
7DQPGb7cWfMwpG3C0cL35bmssfiAbf743qck4H2z8y3/Fucd2r98snV3AA7V
UVWVtnjgi0NpiOidESTcs1ZYuPgRhln2nHSL7gPC+O7tfiUUfEMbyb3dIwbO
FEmytDp3Ae45+cN5aQ6P54Rf2riUBqK816uaMlpg/0/FIq6kJbz+x7i++lQm
oJdy9Eu2Omj+y3zjXe0qUvsl76/dzIZn3bMtCnr5W3l7JiCmsYFtTnKF/t45
cOPwRqFO9Ds4Vlx6XGNrLlVpOtWwpWVD12+pM+XS/5AlM5aNL5CGaLD2XG4l
IxPesnQN59DVIf2pwnTWHBpiUhGT/PF3v8HFcO1SiWArzvIn0S940xD17cbq
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
6hs1
       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7976969384475803`*^9, {3.797700702427249*^9, 3.7977007032241*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"2277db71-f0d2-49aa-9581-d34493a79a08"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DiagramaOsciladores", "[", 
    RowBox[{
     RowBox[{"m1Solution", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}], ",", 
     RowBox[{"m2Solution", "/.", 
      RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"tp", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7975297712867527`*^9, 3.797529800849552*^9}, 
   3.79752984838229*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"79dff92b-1031-45ba-b2b8-de943cc2f3d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExportImages", "[", 
    RowBox[{"file_", ",", "frames_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indexLength", ",", "directory", ",", "name"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"indexLength", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"Length", "[", "frames", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"directory", " ", "=", " ", 
       RowBox[{"DirectoryName", "[", "file", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"name", " ", "=", " ", 
       RowBox[{"FileBaseName", "[", "file", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Export", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"directory", ",", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", 
                RowBox[{"IntegerString", "[", 
                 RowBox[{"#2", ",", "10", ",", "indexLength"}], "]"}], ",", 
                "\"\<.png\>\""}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "#1"}], "\[IndentingNewLine]", "]"}], "&"}],
         ",", "\[IndentingNewLine]", "frames"}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.755269580353081*^9, 3.7552696262331333`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"708fd2ca-fd0a-47ec-88c5-f41ec73c008e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<AdvancedMapping`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7977009300532093`*^9, 3.7977009375262575`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5c662253-f983-4d6b-85d4-3b47d025d129"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgs", " ", "=", " ", 
   RowBox[{"ProgressTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DiagramaOsciladores", "[", 
      RowBox[{
       RowBox[{"m1Solution", "/.", 
        RowBox[{"t", "\[Rule]", "tp"}]}], ",", 
       RowBox[{"m2Solution", "/.", 
        RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tp", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79770077370065*^9, 3.79770081643812*^9}, {
  3.797702919957035*^9, 3.7977029238531265`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"81ba9368-782d-4604-af67-20e467448f24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Animacion\>\"", ",", 
    "\"\<imgs.png\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7977010168946795`*^9, 3.797701040634629*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"834d7312-c738-436f-bb29-4e7a8a3c3e40"],

Cell[BoxData["\<\"C:\\\\Users\\\\15-K212LA\\\\Documents\\\\Programacion\\\\\
MetNum-UV\\\\Unidad 3\\\\Clase 13\\\\Animacion\\\\imgs.png\"\>"], "Output",
 CellChangeTimes->{3.7977010420720835`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"06649d89-e6b5-427c-b23f-610a38b75a98"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExportImages", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Animacion\>\"", 
       ",", "\"\<imgs.png\>\""}], "}"}], "]"}], ",", "imgs"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7977010469010687`*^9, 3.7977010497925253`*^9}, {
   3.7977018082276373`*^9, 3.797701824769734*^9}, 3.797703155511655*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"f56cc665-e125-4662-9bd5-237053feaea5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformaci\[OAcute]n lineal", "Subtitle",
 CellChangeTimes->{{3.7306738552704*^9, 
  3.7306738597022457`*^9}},ExpressionUUID->"6365c5b1-a3e3-404d-9ec5-\
0cc23a075833"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PatternGrid", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "#"}], "}"}]}], ",", 
          RowBox[{"m", ".", 
           RowBox[{"{", 
            RowBox[{"10", ",", "#"}], "}"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", ".", 
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "10"}]}], "}"}]}], ",", 
          RowBox[{"m", ".", 
           RowBox[{"{", 
            RowBox[{"#", ",", "10"}], "}"}]}]}], "}"}]}], "}"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10", ",", 
       RowBox[{"2", "/", "n"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lines", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"Line", ",", 
     RowBox[{"PatternGrid", "[", 
      RowBox[{"m", ",", "n"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7306633790353193`*^9, 3.73066340884447*^9}, {
  3.73066346416842*^9, 3.730663486964697*^9}, {3.7306636986757307`*^9, 
  3.730663721825324*^9}, {3.730664027944014*^9, 3.730664043229805*^9}, {
  3.730664518437429*^9, 3.730664521594885*^9}, {3.730664667680688*^9, 
  3.73066467322158*^9}, {3.730666405773107*^9, 3.73066642528979*^9}, {
  3.730666810103791*^9, 3.730666819654319*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c7bf4fa7-8f26-479b-b804-49d711d7e619"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "lineas", ",", "eje", ",", "vector", ",", "etiquetas"}],
     "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lineas", " ", "=", " ", 
       RowBox[{"Lines", "[", 
        RowBox[{"m", ",", "5"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eje", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", "Thick", 
         ",", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"etiquetas", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", "14"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\"", ",", "14"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(K . X\), \(\[RightVector]\)]\)\>\"", 
               ",", "14"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "m", ".", "X"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vector", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", "X"}]}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Matriz K: \>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"MatrixForm", "[", "m", "]"}], ",", "\"\<,    \>\"", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<X: \>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"MatrixForm", "[", "X", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<K.X: \>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"m", ".", "X"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Visualizaci\[OAcute]n\>\"", ",", "Bold"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"lineas", ",", "eje", ",", "vector", ",", "etiquetas"}], 
             "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "Left", 
        ",", "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.7"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.730667057403651*^9, 3.730667194773449*^9}, {
  3.7306672613906727`*^9, 3.730667284233098*^9}, {3.730667368958439*^9, 
  3.7306674484158173`*^9}, {3.7306675109801617`*^9, 3.730667512779129*^9}, {
  3.730667575978011*^9, 3.73066762125605*^9}, {3.730667680944339*^9, 
  3.730667759573748*^9}, {3.73067188756325*^9, 3.730671890630805*^9}, {
  3.7306720370207157`*^9, 3.730672193152834*^9}, {3.730672275532535*^9, 
  3.730672358714501*^9}, {3.730672389932659*^9, 3.730672459922847*^9}, {
  3.730672506837866*^9, 3.7306725307701893`*^9}, {3.7976972380419493`*^9, 
  3.7976972572830935`*^9}, {3.7976973138382792`*^9, 3.797697385574117*^9}, {
  3.797697434533977*^9, 3.7976974346628995`*^9}, {3.7976975653594418`*^9, 
  3.797697597370734*^9}, {3.7976976867886877`*^9, 3.797697689184224*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"9b8f86fb-ab70-4cdc-9ab5-1df8c6962ba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizaci\[OAcute]n de osciladores como transformaci\[OAcute]n \
lineal", "Subtitle",
 CellChangeTimes->{{3.7975363793977823`*^9, 3.7975363885991263`*^9}, {
  3.797536501663513*^9, 
  3.797536504539743*^9}},ExpressionUUID->"01f27192-2370-45cb-b9fe-\
f119379d49e7"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "m", ",", "v", ",", "lineas", ",", "eje", ",", "vector", ",", "etiquetas",
      ",", "original"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"(", GridBox[{
           {
            RowBox[{"k", "+", "kP"}], 
            RowBox[{"-", "kP"}]},
           {
            RowBox[{"-", "kP"}], 
            RowBox[{"k", "+", "kP"}]}
          }], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m1Solution", "/.", 
          RowBox[{"t", "\[Rule]", "tp"}]}], ",", 
         RowBox[{"m2Solution", "/.", 
          RowBox[{"t", "\[Rule]", "tp"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lineas", " ", "=", " ", 
       RowBox[{"Lines", "[", 
        RowBox[{"m", ",", "5"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eje", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", "Thick", 
         ",", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"etiquetas", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", "14"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\"", ",", "14"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(x\), \(\[RightVector]\)]\)\>\"", ",",
                "14"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "v"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<m \!\(\*FractionBox[SuperscriptBox[\(d\), \(2\)], \
SuperscriptBox[\(dt\), \(2\)]]\) \!\(\*OverscriptBox[\(x\), \
\(\[RightVector]\)]\)\>\"", ",", "14"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "m", ".", "v"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"original", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "v"}], "}"}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vector", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Yellow", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", "v"}]}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Matriz\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MatrixForm", "[", "m", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Diagrama\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"DiagramaOsciladores", "[", 
           RowBox[{
            RowBox[{"m1Solution", "/.", 
             RowBox[{"t", "\[Rule]", "tp"}]}], ",", 
            RowBox[{"m2Solution", "/.", 
             RowBox[{"t", "\[Rule]", "tp"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Visualizaci\[OAcute]n\>\"", ",", "Bold"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
             "lineas", ",", "eje", ",", "original", ",", "vector", ",", 
              "etiquetas"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "Left", 
        ",", "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tp", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7975300566031017`*^9, 3.7975301384117374`*^9}, {
   3.7975301761994877`*^9, 3.797530212658032*^9}, {3.797530279678773*^9, 
   3.7975302865595493`*^9}, 3.7975303314828825`*^9, {3.7975303665093317`*^9, 
   3.797530366926074*^9}, 3.7975304497610836`*^9, {3.7975306813405094`*^9, 
   3.797530740389161*^9}, {3.797530788609488*^9, 3.79753080046118*^9}, {
   3.7975308527979617`*^9, 3.797530888586932*^9}, {3.797536407253632*^9, 
   3.7975364273822412`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"3715383b-573b-4100-bdb3-d35d476bc5ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizaci\[OAcute]n de los eigenvectores", "Subtitle",
 CellChangeTimes->{{3.797536475077879*^9, 
  3.7975364859272113`*^9}},ExpressionUUID->"f6784722-3dc3-449f-ac9c-\
6417f1dfb101"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "m", ",", "mEigenvectores", ",", "mEigenvalores", ",", "lineas", ",", 
     "eje", ",", "vector", ",", "span", ",", "eigenvectores", ",", 
     "etiquetas", ",", "eigenEtiquetas"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mEigenvectores", " ", "=", " ", 
       RowBox[{"Eigenvectors", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mEigenvalores", " ", "=", " ", 
       RowBox[{"Eigenvalues", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lineas", " ", "=", " ", 
       RowBox[{"Lines", "[", 
        RowBox[{"m", ",", "5"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eje", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", "Thick", 
         ",", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"span", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Orange", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "v"}], "}"}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vector", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", "v"}]}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"etiquetas", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", "12"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\"", ",", "12"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<span\>\"", ",", "12"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "v"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(v\), \(\[RightVector]\)]\)\>\"", ",",
                "12"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "m", ".", "v"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"mEigenvalores", ",", "_Complex"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eigenvectores", " ", "=", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Dashed", ",", "Purple", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"First", "[", "mEigenvectores", "]"}]}], "}"}], "]"}], 
            ",", "\[IndentingNewLine]", "Dashed", ",", "Brown", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"Last", "[", "mEigenvectores", "]"}]}], "}"}], "]"}]}],
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"eigenEtiquetas", " ", "=", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*OverscriptBox[SubscriptBox[\(v\), \(1\)], \(\
\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", GridBox[{
                  {"0.5", "0"},
                  {"0", "0.5"}
                 }], ")"}], ".", 
               RowBox[{"First", "[", "mEigenvectores", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*OverscriptBox[SubscriptBox[\(v\), \(2\)], \(\
\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", GridBox[{
                  {"0.5", "0"},
                  {"0", "0.5"}
                 }], ")"}], ".", "m", ".", 
               RowBox[{"Last", "[", "mEigenvectores", "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eigenvectores", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"eigenEtiquetas", " ", "=", 
          RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Matriz\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MatrixForm", "[", "m", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Eigenvalores\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", "mEigenvalores", ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Eigenvectores\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Row", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\) = \>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\) = \>\""}], "}"}], 
                 ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{"MatrixForm", ",", "mEigenvectores"}], "]"}]}], 
                "}"}], "]"}]}], "]"}], ",", "\"\<, \>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Visualizaci\[OAcute]n\>\"", ",", "Bold"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
             "lineas", ",", "eje", ",", "vector", ",", "span", ",", 
              "eigenvectores", ",", "etiquetas", ",", "eigenEtiquetas"}], 
             "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "Left", 
        ",", "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.7"}], "}"}]}], "}"}], ",", "Locator"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.730670637732417*^9, 3.730670649929978*^9}, {
  3.730670739640192*^9, 3.730670769805335*^9}, {3.730670835630454*^9, 
  3.730670851530375*^9}, {3.730671135455846*^9, 3.730671152425383*^9}, {
  3.730671203776203*^9, 3.7306712869462833`*^9}, {3.730671414144906*^9, 
  3.73067144616882*^9}, {3.730671578584865*^9, 3.730671584009907*^9}, {
  3.730671623054781*^9, 3.730671729142439*^9}, {3.730671839770452*^9, 
  3.7306718426444902`*^9}, {3.73067259215889*^9, 3.7306726058439837`*^9}, {
  3.730672655963929*^9, 3.730672670326168*^9}, {3.7306727107978477`*^9, 
  3.730672756828909*^9}, {3.730672788842901*^9, 3.73067280640005*^9}, {
  3.7306728427039223`*^9, 3.730672949305807*^9}, {3.730673187654207*^9, 
  3.7306732170313673`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ad68e252-2354-44f7-8ffb-6974c3d67a57"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`m$$ = {{1, 0}, {0, 
  1}}, $CellContext`mEigenvectores$$ = {{0, 1}, {1, 
  0}}, $CellContext`mEigenvalores$$ = {1, 1}, $CellContext`lineas$$ = {
   Line[{{{-10, -10}, {10, -10}}, {{-10, -10}, {-10, 10}}}], 
   Line[{{{-10, 
       Rational[-48, 5]}, {10, 
       Rational[-48, 5]}}, {{
       Rational[-48, 5], -10}, {
       Rational[-48, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-46, 5]}, {10, 
       Rational[-46, 5]}}, {{
       Rational[-46, 5], -10}, {
       Rational[-46, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-44, 5]}, {10, 
       Rational[-44, 5]}}, {{
       Rational[-44, 5], -10}, {
       Rational[-44, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-42, 5]}, {10, 
       Rational[-42, 5]}}, {{
       Rational[-42, 5], -10}, {
       Rational[-42, 5], 10}}}], 
   Line[{{{-10, -8}, {10, -8}}, {{-8, -10}, {-8, 10}}}], 
   Line[{{{-10, 
       Rational[-38, 5]}, {10, 
       Rational[-38, 5]}}, {{
       Rational[-38, 5], -10}, {
       Rational[-38, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-36, 5]}, {10, 
       Rational[-36, 5]}}, {{
       Rational[-36, 5], -10}, {
       Rational[-36, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-34, 5]}, {10, 
       Rational[-34, 5]}}, {{
       Rational[-34, 5], -10}, {
       Rational[-34, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-32, 5]}, {10, 
       Rational[-32, 5]}}, {{
       Rational[-32, 5], -10}, {
       Rational[-32, 5], 10}}}], 
   Line[{{{-10, -6}, {10, -6}}, {{-6, -10}, {-6, 10}}}], 
   Line[{{{-10, 
       Rational[-28, 5]}, {10, 
       Rational[-28, 5]}}, {{
       Rational[-28, 5], -10}, {
       Rational[-28, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-26, 5]}, {10, 
       Rational[-26, 5]}}, {{
       Rational[-26, 5], -10}, {
       Rational[-26, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-24, 5]}, {10, 
       Rational[-24, 5]}}, {{
       Rational[-24, 5], -10}, {
       Rational[-24, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-22, 5]}, {10, 
       Rational[-22, 5]}}, {{
       Rational[-22, 5], -10}, {
       Rational[-22, 5], 10}}}], 
   Line[{{{-10, -4}, {10, -4}}, {{-4, -10}, {-4, 10}}}], 
   Line[{{{-10, 
       Rational[-18, 5]}, {10, 
       Rational[-18, 5]}}, {{
       Rational[-18, 5], -10}, {
       Rational[-18, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-16, 5]}, {10, 
       Rational[-16, 5]}}, {{
       Rational[-16, 5], -10}, {
       Rational[-16, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-14, 5]}, {10, 
       Rational[-14, 5]}}, {{
       Rational[-14, 5], -10}, {
       Rational[-14, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-12, 5]}, {10, 
       Rational[-12, 5]}}, {{
       Rational[-12, 5], -10}, {
       Rational[-12, 5], 10}}}], 
   Line[{{{-10, -2}, {10, -2}}, {{-2, -10}, {-2, 10}}}], 
   Line[{{{-10, 
       Rational[-8, 5]}, {10, 
       Rational[-8, 5]}}, {{
       Rational[-8, 5], -10}, {
       Rational[-8, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-6, 5]}, {10, 
       Rational[-6, 5]}}, {{
       Rational[-6, 5], -10}, {
       Rational[-6, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-4, 5]}, {10, 
       Rational[-4, 5]}}, {{
       Rational[-4, 5], -10}, {
       Rational[-4, 5], 10}}}], 
   Line[{{{-10, 
       Rational[-2, 5]}, {10, 
       Rational[-2, 5]}}, {{
       Rational[-2, 5], -10}, {
       Rational[-2, 5], 10}}}], 
   Line[{{{-10, 0}, {10, 0}}, {{0, -10}, {0, 10}}}], 
   Line[{{{-10, 
       Rational[2, 5]}, {10, 
       Rational[2, 5]}}, {{
       Rational[2, 5], -10}, {
       Rational[2, 5], 10}}}], 
   Line[{{{-10, 
       Rational[4, 5]}, {10, 
       Rational[4, 5]}}, {{
       Rational[4, 5], -10}, {
       Rational[4, 5], 10}}}], 
   Line[{{{-10, 
       Rational[6, 5]}, {10, 
       Rational[6, 5]}}, {{
       Rational[6, 5], -10}, {
       Rational[6, 5], 10}}}], 
   Line[{{{-10, 
       Rational[8, 5]}, {10, 
       Rational[8, 5]}}, {{
       Rational[8, 5], -10}, {
       Rational[8, 5], 10}}}], 
   Line[{{{-10, 2}, {10, 2}}, {{2, -10}, {2, 10}}}], 
   Line[{{{-10, 
       Rational[12, 5]}, {10, 
       Rational[12, 5]}}, {{
       Rational[12, 5], -10}, {
       Rational[12, 5], 10}}}], 
   Line[{{{-10, 
       Rational[14, 5]}, {10, 
       Rational[14, 5]}}, {{
       Rational[14, 5], -10}, {
       Rational[14, 5], 10}}}], 
   Line[{{{-10, 
       Rational[16, 5]}, {10, 
       Rational[16, 5]}}, {{
       Rational[16, 5], -10}, {
       Rational[16, 5], 10}}}], 
   Line[{{{-10, 
       Rational[18, 5]}, {10, 
       Rational[18, 5]}}, {{
       Rational[18, 5], -10}, {
       Rational[18, 5], 10}}}], 
   Line[{{{-10, 4}, {10, 4}}, {{4, -10}, {4, 10}}}], 
   Line[{{{-10, 
       Rational[22, 5]}, {10, 
       Rational[22, 5]}}, {{
       Rational[22, 5], -10}, {
       Rational[22, 5], 10}}}], 
   Line[{{{-10, 
       Rational[24, 5]}, {10, 
       Rational[24, 5]}}, {{
       Rational[24, 5], -10}, {
       Rational[24, 5], 10}}}], 
   Line[{{{-10, 
       Rational[26, 5]}, {10, 
       Rational[26, 5]}}, {{
       Rational[26, 5], -10}, {
       Rational[26, 5], 10}}}], 
   Line[{{{-10, 
       Rational[28, 5]}, {10, 
       Rational[28, 5]}}, {{
       Rational[28, 5], -10}, {
       Rational[28, 5], 10}}}], 
   Line[{{{-10, 6}, {10, 6}}, {{6, -10}, {6, 10}}}], 
   Line[{{{-10, 
       Rational[32, 5]}, {10, 
       Rational[32, 5]}}, {{
       Rational[32, 5], -10}, {
       Rational[32, 5], 10}}}], 
   Line[{{{-10, 
       Rational[34, 5]}, {10, 
       Rational[34, 5]}}, {{
       Rational[34, 5], -10}, {
       Rational[34, 5], 10}}}], 
   Line[{{{-10, 
       Rational[36, 5]}, {10, 
       Rational[36, 5]}}, {{
       Rational[36, 5], -10}, {
       Rational[36, 5], 10}}}], 
   Line[{{{-10, 
       Rational[38, 5]}, {10, 
       Rational[38, 5]}}, {{
       Rational[38, 5], -10}, {
       Rational[38, 5], 10}}}], 
   Line[{{{-10, 8}, {10, 8}}, {{8, -10}, {8, 10}}}], 
   Line[{{{-10, 
       Rational[42, 5]}, {10, 
       Rational[42, 5]}}, {{
       Rational[42, 5], -10}, {
       Rational[42, 5], 10}}}], 
   Line[{{{-10, 
       Rational[44, 5]}, {10, 
       Rational[44, 5]}}, {{
       Rational[44, 5], -10}, {
       Rational[44, 5], 10}}}], 
   Line[{{{-10, 
       Rational[46, 5]}, {10, 
       Rational[46, 5]}}, {{
       Rational[46, 5], -10}, {
       Rational[46, 5], 10}}}], 
   Line[{{{-10, 
       Rational[48, 5]}, {10, 
       Rational[48, 5]}}, {{
       Rational[48, 5], -10}, {
       Rational[48, 5], 10}}}], 
   Line[{{{-10, 10}, {10, 10}}, {{10, -10}, {10, 
    10}}}]}, $CellContext`eje$$ = {
   Thickness[Large], 
   RGBColor[0, 0, 1], 
   Arrow[{{0, 0}, {1, 0}}], 
   Thickness[Large], 
   RGBColor[1, 0, 0], 
   Arrow[{{0, 0}, {0, 1}}]}, $CellContext`vector$$ = {
   Thickness[Large], 
   RGBColor[0, 1, 0], 
   Arrow[{{0, 0}, {0.7, 0.7}}]}, $CellContext`span$$ = {
   Thickness[Large], 
   RGBColor[1, 0.5, 0], 
   Arrow[{{0, 0}, {0.7, 0.7}}]}, $CellContext`eigenvectores$$ = {
   Dashing[{Small, Small}], 
   RGBColor[0.5, 0, 0.5], 
   Arrow[{{0, 0}, {0, 1}}], 
   Dashing[{Small, Small}], 
   RGBColor[0.6, 0.4, 0.2], 
   Arrow[{{0, 0}, {1, 0}}]}, $CellContext`etiquetas$$ = {
   Text[
    Panel[
     Style["\!\(\*OverscriptBox[\(i\), \(^\)]\)", 12], FrameMargins -> 0], {
    0.5, 0.}], 
   Text[
    Panel[
     Style["\!\(\*OverscriptBox[\(j\), \(^\)]\)", 12], FrameMargins -> 0], {
    0., 0.5}], 
   Text[
    Panel[
     Style["span", 12], FrameMargins -> 0], {0.35, 0.35}], 
   Text[
    Panel[
     Style["\!\(\*OverscriptBox[\(v\), \(\[RightVector]\)]\)", 12], 
     FrameMargins -> 0], {0.35, 0.35}]}, $CellContext`eigenEtiquetas$$ = {
   Text[
    Panel[
     Style[
     "\!\(\*OverscriptBox[SubscriptBox[\(v\), \(1\)], \(\[RightVector]\)]\)", 
      12], FrameMargins -> 0], {0., 0.5}], 
   Text[
    Panel[
     Style[
     "\!\(\*OverscriptBox[SubscriptBox[\(v\), \(2\)], \(\[RightVector]\)]\)", 
      12], FrameMargins -> 0], {0.5, 0.}]}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`i$$ = {1, 0}, $CellContext`j$$ = {0, 
     1}, $CellContext`v$$ = {0.7, 0.7}, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
        Hold[$CellContext`i$$], {1, 0}}, Automatic}, {{
        Hold[$CellContext`j$$], {0, 1}}, Automatic}, {{
        Hold[$CellContext`v$$], {0.7, 0.7}}, Automatic}}, Typeset`size$$ = {
     300., {252.5, 258.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`i$$ = {1, 0}, $CellContext`j$$ = {0, 
          1}, $CellContext`v$$ = {0.7, 0.7}}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`m$$ = 
         Transpose[{$CellContext`i$$, $CellContext`j$$}]; \
$CellContext`mEigenvectores$$ = 
         Eigenvectors[$CellContext`m$$]; $CellContext`mEigenvalores$$ = 
         Eigenvalues[$CellContext`m$$]; $CellContext`lineas$$ = \
$CellContext`Lines[$CellContext`m$$, 5]; $CellContext`eje$$ = {Thick, Blue, 
           Arrow[{{0, 0}, 
             Dot[$CellContext`m$$, {1, 0}]}], Thick, Red, 
           Arrow[{{0, 0}, 
             Dot[$CellContext`m$$, {0, 1}]}]}; $CellContext`span$$ = {
          Thick, Orange, 
           Arrow[{{0, 0}, $CellContext`v$$}]}; $CellContext`vector$$ = {
          Thick, Green, 
           Arrow[{{0, 0}, 
             
             Dot[$CellContext`m$$, $CellContext`v$$]}]}; \
$CellContext`etiquetas$$ = {
           Text[
            Panel[
             Style["\!\(\*OverscriptBox[\(i\), \(^\)]\)", 12], FrameMargins -> 
             0], 
            Dot[$CellContext`m$$, {0.5, 0}]], 
           Text[
            Panel[
             Style["\!\(\*OverscriptBox[\(j\), \(^\)]\)", 12], FrameMargins -> 
             0], 
            Dot[$CellContext`m$$, {0, 0.5}]], 
           Text[
            Panel[
             Style["span", 12], FrameMargins -> 0], 
            Dot[{{0.5, 0}, {0, 0.5}}, $CellContext`v$$]], 
           Text[
            Panel[
             Style["\!\(\*OverscriptBox[\(v\), \(\[RightVector]\)]\)", 12], 
             FrameMargins -> 0], 
            Dot[{{0.5, 0}, {0, 0.5}}, $CellContext`m$$, $CellContext`v$$]]}; 
        If[
          Not[
           MemberQ[$CellContext`mEigenvalores$$, 
            Blank[Complex]]], $CellContext`eigenvectores$$ = {Dashed, Purple, 
             Arrow[{{0, 0}, 
               First[$CellContext`mEigenvectores$$]}], Dashed, Brown, 
             Arrow[{{0, 0}, 
               
               Last[$CellContext`mEigenvectores$$]}]}; \
$CellContext`eigenEtiquetas$$ = {
             Text[
              Panel[
               Style[
               "\!\(\*OverscriptBox[SubscriptBox[\(v\), \(1\)], \(\
\[RightVector]\)]\)", 12], FrameMargins -> 0], 
              Dot[{{0.5, 0}, {0, 0.5}}, 
               First[$CellContext`mEigenvectores$$]]], 
             Text[
              Panel[
               Style[
               "\!\(\*OverscriptBox[SubscriptBox[\(v\), \(2\)], \(\
\[RightVector]\)]\)", 12], FrameMargins -> 0], 
              Dot[{{0.5, 0}, {0, 0.5}}, $CellContext`m$$, 
               Last[$CellContext`mEigenvectores$$]]]}; 
          Null, $CellContext`eigenvectores$$ = {}; \
$CellContext`eigenEtiquetas$$ = {}; Null]; Column[{
           Style["Matriz", Bold], 
           MatrixForm[$CellContext`m$$], 
           Style["Eigenvalores", Bold], $CellContext`mEigenvalores$$, 
           Style["Eigenvectores", Bold], 
           Row[
            Map[Row, 
             
             Transpose[{{
               "\!\(\*SubscriptBox[\(v\), \(1\)]\) = ", 
                "\!\(\*SubscriptBox[\(v\), \(2\)]\) = "}, 
               Map[MatrixForm, $CellContext`mEigenvectores$$]}]], ", "], 
           Style["Visualizaci\[OAcute]n", Bold], 
           Graphics[
            
            Join[$CellContext`lineas$$, $CellContext`eje$$, \
$CellContext`vector$$, $CellContext`span$$, $CellContext`eigenvectores$$, \
$CellContext`etiquetas$$, $CellContext`eigenEtiquetas$$], 
            PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, ImageSize -> 300]}, Left,
           1]), "Specifications" :> {{{$CellContext`i$$, {1, 0}}, Automatic, 
          ControlType -> Locator}, {{$CellContext`j$$, {0, 1}}, Automatic, 
          ControlType -> Locator}, {{$CellContext`v$$, {0.7, 0.7}}, Automatic,
           ControlType -> Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{357., {288., 294.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`Lines[
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := Map[Line, 
          $CellContext`PatternGrid[$CellContext`m, $CellContext`n]], \
$CellContext`PatternGrid[
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := Map[{{
            Dot[$CellContext`m, {-10, #}], 
            Dot[$CellContext`m, {10, #}]}, {
            Dot[$CellContext`m, {#, -10}], 
            Dot[$CellContext`m, {#, 10}]}}& , 
          Range[-10, 10, 2/$CellContext`n]]}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.797709482265194*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"9a5c4f1a-9be5-4a81-92fa-ebbe66881b18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizaci\[OAcute]n de los eigenvectores de los osciladores", \
"Subtitle",
 CellChangeTimes->{{3.797536776124565*^9, 
  3.797536787940281*^9}},ExpressionUUID->"a31ddca3-d224-4670-b4c2-\
c10f10a60ddb"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "m", ",", "x", ",", "mEigenvectores", ",", "mEigenvalores", ",", "lineas",
      ",", "eje", ",", "vector", ",", "span", ",", "spanInTime", ",", 
     "eigenvectores", ",", "etiquetas", ",", "eigenEtiquetas", ",", 
     "m1Solution", ",", "m2Solution", ",", 
     RowBox[{"k", " ", "=", " ", "1"}], ",", 
     RowBox[{"kP", " ", "=", " ", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"(", GridBox[{
           {
            RowBox[{"k", "+", "kP"}], 
            RowBox[{"-", "kP"}]},
           {
            RowBox[{"-", "kP"}], 
            RowBox[{"k", "+", "kP"}]}
          }], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m1Solution", ",", "m2Solution"}], "}"}], " ", "=", " ", 
       RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "k"}], " ", 
              RowBox[{"x1", "[", "t", "]"}]}], " ", "+", 
             RowBox[{"kP", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x2", "[", "t", "]"}], "-", 
                RowBox[{"x1", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "k"}], " ", 
              RowBox[{"x2", "[", "t", "]"}]}], " ", "+", 
             RowBox[{"kP", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x1", "[", "t", "]"}], "-", 
                RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"x1", "[", "0", "]"}], " ", "\[Equal]", 
            RowBox[{"x0", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"x2", "[", "0", "]"}], "\[Equal]", 
            RowBox[{"x0", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x1", "'"}], "[", "0", "]"}], " ", "\[Equal]", "0"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x1", "[", "t", "]"}], ",", 
           RowBox[{"x2", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m1Solution", "/.", 
          RowBox[{"t", "\[Rule]", "tp"}]}], ",", 
         RowBox[{"m2Solution", "/.", 
          RowBox[{"t", "\[Rule]", "tp"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mEigenvectores", " ", "=", " ", 
       RowBox[{"Eigenvectors", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mEigenvalores", " ", "=", " ", 
       RowBox[{"Eigenvalues", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lineas", " ", "=", " ", 
       RowBox[{"Lines", "[", 
        RowBox[{"m", ",", "5"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eje", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", "Thick", 
         ",", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"span", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Orange", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "x0"}], "}"}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spanInTime", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Yellow", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "x"}], "}"}], "]"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vector", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"m", ".", "x0"}]}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"etiquetas", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(i\), \(^\)]\)\>\"", ",", "12"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(j\), \(^\)]\)\>\"", ",", "12"}], 
              "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{"m", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(x\), \(\[RightVector]\)]\)\>\"", ",",
                "12"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "x"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[SubscriptBox[\(x\), \(0\)], \(\
\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "x0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<m \!\(\*FractionBox[SuperscriptBox[\(d\), \(2\)], \
SuperscriptBox[\(dt\), \(2\)]]\) \!\(\*OverscriptBox[\(x\), \
\(\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"0.5", "0"},
               {"0", "0.5"}
              }], ")"}], ".", "m", ".", "x0"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"mEigenvalores", ",", "_Complex"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eigenvectores", " ", "=", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Dashed", ",", "Purple", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"First", "[", "mEigenvectores", "]"}]}], "}"}], "]"}], 
            ",", "\[IndentingNewLine]", "Dashed", ",", "Brown", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"Last", "[", "mEigenvectores", "]"}]}], "}"}], "]"}]}],
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"eigenEtiquetas", " ", "=", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*OverscriptBox[SubscriptBox[\(v\), \(1\)], \(\
\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", GridBox[{
                  {"0.5", "0"},
                  {"0", "0.5"}
                 }], ")"}], ".", 
               RowBox[{"First", "[", "mEigenvectores", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*OverscriptBox[SubscriptBox[\(v\), \(2\)], \(\
\[RightVector]\)]\)\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", GridBox[{
                  {"0.5", "0"},
                  {"0", "0.5"}
                 }], ")"}], ".", 
               RowBox[{"Last", "[", "mEigenvectores", "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"eigenvectores", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"eigenEtiquetas", " ", "=", 
          RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Matriz\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MatrixForm", "[", "m", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Eigenvalores\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", "mEigenvalores", ",", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Eigenvectores\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Row", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\) = \>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\) = \>\""}], "}"}], 
                 ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{"MatrixForm", ",", "mEigenvectores"}], "]"}]}], 
                "}"}], "]"}]}], "]"}], ",", "\"\<, \>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Diagrama\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"DiagramaOsciladores", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Visualizaci\[OAcute]n\>\"", ",", "Bold"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
             "lineas", ",", "eje", ",", "vector", ",", "span", ",", 
              "spanInTime", ",", "eigenvectores", ",", "etiquetas", ",", 
              "eigenEtiquetas"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "Left", 
        ",", "\[IndentingNewLine]", "1"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tp", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7975300566031017`*^9, 3.7975301384117374`*^9}, {
   3.7975301761994877`*^9, 3.797530212658032*^9}, {3.797530279678773*^9, 
   3.7975302865595493`*^9}, 3.7975303314828825`*^9, {3.7975303665093317`*^9, 
   3.797530366926074*^9}, 3.7975304497610836`*^9, {3.7975306813405094`*^9, 
   3.797530740389161*^9}, {3.797530788609488*^9, 3.79753080046118*^9}, {
   3.7975308527979617`*^9, 3.797530888586932*^9}, {3.797536407253632*^9, 
   3.7975364273822412`*^9}, {3.797536841803133*^9, 3.797536895044348*^9}, {
   3.7975369282968874`*^9, 3.7975369324843006`*^9}, {3.7975369876053677`*^9, 
   3.797536988013116*^9}, 3.79753723763345*^9, {3.7975372698656187`*^9, 
   3.797537271747449*^9}, {3.7975373044103413`*^9, 3.7975374015525637`*^9}, {
   3.797537640812275*^9, 3.797537641408908*^9}, {3.7975378587790947`*^9, 
   3.79753790073127*^9}, {3.7975381339307103`*^9, 3.7975381890587735`*^9}, {
   3.797538278388791*^9, 3.79753848560522*^9}, {3.79753852197684*^9, 
   3.7975385575349393`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"f23ede73-d2ca-4853-ac69-f4805b51d26d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 3, 96, "Title",ExpressionUUID->"815e6f1a-fed3-476a-bb8a-aaadb0c49d9d"],
Cell[763, 27, 169, 3, 53, "Subtitle",ExpressionUUID->"0701357d-9ca3-48b2-a16f-ceb9c99ffb77"],
Cell[935, 32, 8606, 210, 606, "Input",ExpressionUUID->"e6dca935-a7a3-4903-bfa6-6cb7f7227fe7",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[9566, 246, 272, 5, 28, "Input",ExpressionUUID->"257a15fb-4977-41df-9d28-99d74a3b8ea7"],
Cell[9841, 253, 2297, 39, 69, "Output",ExpressionUUID->"605e272a-523c-49b5-bf1c-7e128328fbd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12175, 297, 175, 3, 53, "Subtitle",ExpressionUUID->"5bfda5cd-2cd5-4812-b7bb-c5e9f138a127"],
Cell[CellGroupData[{
Cell[12375, 304, 2187, 60, 253, "Input",ExpressionUUID->"298c8b71-e516-4a63-9c3d-7c5fb4e2708f",
 InitializationCell->True],
Cell[14565, 366, 168235, 2853, 71, "Output",ExpressionUUID->"2277db71-f0d2-49aa-9581-d34493a79a08"]
}, Open  ]],
Cell[182815, 3222, 604, 14, 104, "Input",ExpressionUUID->"79dff92b-1031-45ba-b2b8-de943cc2f3d6"],
Cell[183422, 3238, 1726, 40, 399, "Input",ExpressionUUID->"708fd2ca-fd0a-47ec-88c5-f41ec73c008e",
 InitializationCell->True],
Cell[185151, 3280, 248, 4, 45, "Input",ExpressionUUID->"5c662253-f983-4d6b-85d4-3b47d025d129"],
Cell[185402, 3286, 716, 16, 86, "Input",ExpressionUUID->"81ba9368-782d-4604-af67-20e467448f24"],
Cell[CellGroupData[{
Cell[186143, 3306, 346, 7, 45, "Input",ExpressionUUID->"834d7312-c738-436f-bb29-4e7a8a3c3e40"],
Cell[186492, 3315, 275, 3, 32, "Output",ExpressionUUID->"06649d89-e6b5-427c-b23f-610a38b75a98"]
}, Open  ]],
Cell[186782, 3321, 523, 12, 45, "Input",ExpressionUUID->"f56cc665-e125-4662-9bd5-237053feaea5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187342, 3338, 175, 3, 53, "Subtitle",ExpressionUUID->"6365c5b1-a3e3-404d-9ec5-0cc23a075833"],
Cell[187520, 3343, 1747, 48, 135, "Input",ExpressionUUID->"c7bf4fa7-8f26-479b-b804-49d711d7e619",
 InitializationCell->True],
Cell[189270, 3393, 7050, 172, 894, "Input",ExpressionUUID->"9b8f86fb-ab70-4cdc-9ab5-1df8c6962ba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196357, 3570, 272, 5, 53, "Subtitle",ExpressionUUID->"01f27192-2370-45cb-b9fe-f119379d49e7"],
Cell[196632, 3577, 7272, 180, 991, "Input",ExpressionUUID->"3715383b-573b-4100-bdb3-d35d476bc5ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203941, 3762, 190, 3, 53, "Subtitle",ExpressionUUID->"f6784722-3dc3-449f-ac9c-6417f1dfb101"],
Cell[CellGroupData[{
Cell[204156, 3769, 11335, 271, 1677, "Input",ExpressionUUID->"ad68e252-2354-44f7-8ffb-6974c3d67a57"],
Cell[215494, 4042, 14034, 393, 601, "Output",ExpressionUUID->"9a5c4f1a-9be5-4a81-92fa-ebbe66881b18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229577, 4441, 209, 4, 53, "Subtitle",ExpressionUUID->"a31ddca3-d224-4670-b4c2-c10f10a60ddb"],
Cell[229789, 4447, 15501, 372, 2001, "Input",ExpressionUUID->"f23ede73-d2ca-4853-ac69-f4805b51d26d"]
}, Open  ]]
}, Open  ]]
}
]
*)

